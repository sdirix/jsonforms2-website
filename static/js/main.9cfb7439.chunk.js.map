{"version":3,"sources":["utils/prism.js","pages/home/reactLogo.svg","pages/home/schemalogo.svg","pages/home/reduxLogo.svg","pages/support/eclipsesource.png","pages/docs/listings/seed.md","webpack:///./src/pages/docs/RatingControl.jsx?03fe","webpack:///./src/pages/docs/ratingControlTester.js?4c7b","pages/docs/listings/registerRenderer.md","pages/docs/listings/rule.md","pages/docs/listings/jsonFormsState.md","pages/docs/listings/validationState.md","pages/docs/listings/multipleForms.md","pages/docs/listings/init.md","pages/docs/listings/installation.md","pages/docs/listings/setupStore.md","pages/docs/listings/render.md","pages/docs/listings/initAction.md","pages/docs/listings/imports.md","pages/docs/listings/variables.md","pages/docs/listings/registerUISchema.md","pages/docs/listings/retrieveUISchema.md","common/styles.js","common/MarkdownElement.js","common/Demo.js","common/PropHeader.js","common/ApiLink.js","common/Logo.js","common/Links.js","common/index.js","common/store.js","pages/home/index.js","pages/Imprint.js","pages/docs/listings/intro.js","pages/docs/Rating.jsx","pages/docs/RatingControl.jsx","pages/docs/ratingControlTester.js","pages/docs/Intro.js","pages/docs/GettingStarted.js","pages/docs/CustomRenderers.js","common/Warning.js","pages/docs/UISchemaElements.js","pages/docs/listings/uischema.js","pages/docs/Controls.js","pages/docs/listings/layouts.js","pages/docs/Layouts.js","pages/docs/Rules.js","pages/docs/listings/store.js","pages/docs/Store.js","pages/docs/Tutorial.js","pages/docs/APIs.js","pages/docs/ProvidingUISchemas.js","pages/docs/RendererSets.js","pages/docs/index.js","pages/examples/Person.js","pages/examples/LayoutExamples.js","pages/examples/Array.js","pages/examples/Categorization.js","pages/examples/RuleExample.js","pages/examples/GenerateSchemaExample.js","pages/examples/GenerateUISchemaExample.js","pages/examples/CustomControlsExample.js","pages/examples/index.js","pages/support/index.js","Footer.js","pages/NotFound.js","common/loadScript.js","pages/CookiePolicy.js","pages/PrivacyPolicy.js","App.js","registerServiceWorker.js","index.js"],"names":["process","styleNode","prismjs__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prismjs__WEBPACK_IMPORTED_MODULE_0___default","n","browser","document","createElement","setAttribute","head","appendChild","prism","module","exports","p","common_styles","grid","paddingTop","link","color","textDecoration","sidebarLink","code","theme","_ref","display","padding","margin","Object","defineProperty","breakpoints","up","overflow","borderRadius","mainSection","lineHeight","marginBottom","sidebar","backgroundColor","borderLeft","sidebarLinks","listStyleType","paddingBottom","list","paddingLeft","display1","headline","marginTop","title","caption","justifyContent","warningContainer","renderer","marked","Renderer","heading","text","level","escapedText","toLowerCase","replace","concat","setOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","langPrefix","highlight","lang","language","languages","diff","css","json","jsx","withStyles","root","fontFamily","typography","fontSize","spacing","unit","palette","primary","& .anchor-link","position","& pre, & pre[class*=\"language-\"]","background","paper","& code","& p code, & ul code, & pre code","& h1","objectSpread","display2","secondary","& h2","& h3","& h4","& p, & ul, & ol","& h1, & h2, & h3, & h4","& .anchor-link-style","opacity","&:hover .anchor-link-style","hint","&:hover","& svg","width","height","fill","& table","overflowX","borderCollapse","borderSpacing","& thead","fontWeight","fontWeightMedium","& tbody","& td","borderBottom","lightDivider","textAlign","& td:last-child","paddingRight","& td compact","& td code","& th","whiteSpace","& th:last-child","& tr","& thead tr","& strong","& blockquote","& a, & a code","A400","& .token.punctuation","flip","props","classes","className","other","objectWithoutProperties","react_default","a","assign","classNames","dangerouslySetInnerHTML","__html","Demo","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpenSchema","setState","schemaOpen","state","uischemaOpen","dataOpen","handleClickOpenUiSchema","handleClickOpenData","undefined","js","_this$props","DemoComponent","schema","uischema","data","dataAsString","JSON","stringify","schemaAsString","uiSchemaAsString","_this$state","Tooltip_default","placement","Icon_default","onClick","schemaButton","Description_default","uischemaButton","ViewQuilt_default","Code_default","Collapse_default","in","unmountOnExit","common_MarkdownElement","dir","demo","React","Component","connect","getData","_code","marginLeft","marginRight","mixins","gutters","contentFrame","zIndex","top","right","commonStyles","type","Typography_default","variant","href","children","Logo","_ref$width","_ref$height","_ref$color","version","xmlns","viewBox","preserveAspectRatio","transform","stroke","id","d","RadiumLink","Radium","Link","ConnectedLinks","withRouter","currentLocation","url","routes","_ref$indentation","indentation","history","map","route","slug","Fragment","key","to","currentRoute","style","name","indexOf","RadiumHashLink","HashLink","createJsonFormsStore","store","createStore","combineReducers","jsonforms","jsonformsReducer","renderers","materialRenderers","tester","materialCategorizationTester","MaterialCategorizationLayout","fields","materialFields","dispatch","Actions","init","firstName","flexGrow","card","logo","icon","iconWrapper","schemaLogo","details","flexDirection","container","alignItems","containerText","maxWidth","button","react","Grid_default","item","xs","corePackageJson","common_RadiumLink","Button_default","Card_default","CardContent_default","justify","align","src","alt","Report_default","Brush_default","reactLogo","reduxLogo","es","common_Demo","react_lib","IntroCode","properties","description","done","rating","required","elements","scope","options","multi","label","Rating","_React$Component","value","hoverAt","inherits","createClass","idx","_this2","i","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","handleClick","getDerivedStateFromProps","nextProps","prevState","mapStateToControlProps","mapDispatchToControlProps","handleChange","path","Rating_Rating","ev","Number","rankWith","MAX_VALUE","scopeEndsWith","storeWithoutCustomControl","storeWithRatingControlExample","registerRenderer","ratingControlTester","RatingControl","Intro_RadiumLink","seed","require","ratingControlCode","ratingControlTesterCode","registerRendererCode","ratingData","ratingSchema","minimum","maximum","ratingUiSchema","styles","alert","Info_default","common_Warning","UiSchemaElementsCode","controls","common_ApiLink","common_PropHeader","Controls_RadiumLink","layouts","Layouts_RadiumLink","Layouts_RadiumHashLink","layout","uischemaHorizontal","uischemaVertical","uischemaGroup","rule","ul","Rules_RadiumLink","person","lastName","age","shippingAddress","$ref","address","addressId","enum","street","city","zipCode","clonedPersonSchema","_","schemas","uischemas","jsonFormsState","validationState","multipleForms","linkedFormsStore","installation","setupStore","render","initAction","imports","variables","personCoreSchema","listStyle","registerUISchemaCode","retrieveUISchemaCode","match","location","Switch","Route","component","Intro","GettingStarted","Tutorial","Controls","Layouts","Rules","UISchemaElements","CustomRenderers","ProvidingUISchemas","RendererSets","Store","APIs","common_Links","pathname","verticalLayoutStore","groupStore","horizontalStore","complexStore","uischemaComplex","array","vegetarian","birthDate","nationality","categorization","generateJsonSchema","generateSchema","generateDefaultUISchema","generateUISchema","day3","Person","Array","CategorizationExample","RuleExample","GenerateUISchemaExample","GenerateSchemaExample","CustomControlsExample","eclipseSourceLogo","Feedback_default","Build_default","School_default","SwapVerticalCircle_default","Chat_default","LocalOffer_default","Email_default","footer","NotFound","loadScript","Promise","resolve","reject","script","addEventListener","e","body","CookiePolicy","loadCookiePolicy","status","then","catch","bind","assertThisInitialized","setTimeout","PrivacyPolicy","App","BrowserRouter","main","AppBar_default","appBar","Toolbar_default","App_RadiumLink","logoTitle","esm_extends","content","exact","Home","Examples","Docs","Support","Imprint","src_Footer","flex","minHeight","boxShadow","menuButton","Boolean","window","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cfb7439.chunk.js","sourcesContent":["import prism from 'prismjs';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-json';\n\n/* eslint-disable import/no-webpack-loader-syntax */\nimport lightTheme from 'prismjs/themes/prism.css';\nimport darkTheme from 'prismjs/themes/prism-okaidia.css';\n/* eslint-enable import/no-webpack-loader-syntax */\n\nexport { lightTheme, darkTheme };\n\nlet styleNode;\n\nif (process.browser) {\n  styleNode = document.createElement('style');\n  styleNode.setAttribute('data-prism', 'true');\n  if (document.head) {\n    document.head.appendChild(styleNode);\n  }\n}\n\nexport function setPrismTheme(theme: string) {\n  styleNode.textContent = theme;\n}\n\nexport default prism;","module.exports = __webpack_public_path__ + \"static/media/reactLogo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/schemalogo.3c03740a.svg\";","module.exports = __webpack_public_path__ + \"static/media/reduxLogo.ed5f9644.svg\";","module.exports = __webpack_public_path__ + \"static/media/eclipsesource.b177227d.png\";","module.exports = \"git clone https://github.com/eclipsesource/jsonforms-react-seed jsonforms-custom-renderers-tutorial\\ncd jsonforms-custom-renderers-tutorial\\nnpm install\\nnpm start\\n\"","module.exports = \"import * as React from 'react';\\nimport { mapStateToControlProps, mapDispatchToControlProps } from '@jsonforms/core';\\nimport { connect } from 'react-redux';\\nimport { Rating } from './Rating';\\n\\nconst RatingControl = ({ data, handleChange, path }) => (\\n  <Rating\\n    value={data}\\n    onClick={ev => handleChange(path, Number(ev.value))}\\n  />\\n);\\n\\nexport default connect(\\n  mapStateToControlProps,\\n  mapDispatchToControlProps,\\n)(RatingControl);\\n\"","module.exports = \"import { rankWith, scopeEndsWith } from '@jsonforms/core';\\n\\nexport default rankWith(Number.MAX_VALUE, scopeEndsWith('rating'));\\n\"","module.exports = \"import RatingControl from './RatingControl';\\nimport ratingControlTester from './ratingControlTester'\\n\\nstore.dispatch(Actions.registerRenderer(ratingControlTester, RatingControl));\"","module.exports = \"\\\"rule\\\": {\\n  \\\"effect\\\": \\\"HIDE\\\",\\n  \\\"condition\\\": {\\n    \\\"scope\\\": \\\"#/properties/name\\\",\\n    \\\"schema\\\": { enum: [\\\"foo\\\"] }\\n  }\\n}\"","module.exports = \"export interface JsonFormsState {\\n  jsonforms: {\\n    core: {\\n      data: any;\\n      schema?: JsonSchema;\\n      uischema?: UISchemaElement;\\n      validation?: ValidationState,\\n    };\\n    // TODO: should we type these?    \\n    renderers?: any[];\\n    fields?: any[];\\n    // allow additional state for JSONForms\\n    [additionalState: string]: any;\\n  };\\n}\"","module.exports = \"errors: ErrorObject[];\\nvalidator: ValidateFunction;\\n\"","module.exports = \"<div>\\n  <JsonForms schema={personSchema}\\n             uischema={personUISchema}\\n             path='person'\\n  />\\n  <JsonForms schema={addressSchema}\\n             uischema={addressUISchema}\\n             path='address'\\n  />\\n</div>\\n    \"","module.exports = \"<Provider store={store}>\\n  <App />\\n</Provider>\"","module.exports = \"npm install --save @jsonforms/core\\nnpm install --save @jsonforms/material-renderers\\nnpm install --save @jsonforms/examples\"","module.exports = \"const store = createStore(\\n  combineReducers({ jsonforms: jsonformsReducer() }),  \\n  {\\n    jsonforms: {\\n      renderers: materialRenderers,\\n      fields: materialFields,\\n    }\\n  }\\n);\"","module.exports = \"import { JsonForms } from '@jsonforms/react';\\n// other imports...\\n\\nclass App extends Component {\\n  render() {\\n    <div>\\n       {/* other markup... */}\\n       <JsonForms />\\n    </div>\\n  }\\n}\"","module.exports = \"store.dispatch(Actions.init(data, schema, uischema));\"","module.exports = \"import { combineReducers, createStore } from 'redux';\\nimport { Provider } from 'react-redux';\\n\\nimport { Actions, jsonformsReducer } from '@jsonforms/core';\\nimport { person } from '@jsonforms/examples';\\nimport { materialFields, materialRenderers } from '@jsonforms/material-renderers';\\n\"","module.exports = \"const schema = person.schema;\\nconst uischema = person.uischema\\nconst data = person.data;\"","module.exports = \"import { Actions, NOT_APPLICABLE } from '@jsonforms/core';\\n\\nstore.dispatch(Actions.registerUISchema(\\n  (jsonSchema, schemaPath) => {\\n    return schemaPath === '#/properties/firstarray' ? 2 : NOT_APPLICABLE;\\n  },\\n  {\\n    type: 'VerticalLayout',\\n    elements: [\\n      {\\n        type: 'Control',\\n        scope: '#/properties/firstName'\\n      },\\n      {\\n        type: 'Control',\\n        scope: '#/properties/lastName'\\n      }\\n    ]\\n  }\\n));\"","module.exports = \"import * as React from 'react';\\nimport * as _ from 'lodash';\\nimport { composePaths,ControlElement, Resolve } from '@jsonforms/core';\\nimport { JsonForms } from '@jsonforms/react';\\n\\nexport const MyControl =\\n  ({ data, path, schema, onAdd, uischema, findUISchema }) => {\\n\\n    const controlElement = uischema as ControlElement;\\n    const resolvedSchema = Resolve.schema(schema, `${controlElement.scope}/items`);\\n\\n    return (\\n        <fieldset>\\n            <legend>My Control</legend>\\n            <div>\\n            {\\n                data ? _.range(0, data.length).map(index => {\\n\\n                    const uischema = findUISchema(resolvedSchema, controlElement.scope, path);\\n                    const childPath = composePaths(path, `${index}`);\\n\\n                    return (\\n                    <JsonForms\\n                        schema={resolvedSchema}\\n                        uischema={uischema}\\n                        path={childPath}\\n                        key={childPath}\\n                    />\\n                    );\\n                }) : <p>No data</p>\\n            }\\n            </div>\\n        </fieldset>\\n    );\\n  };\"","export default {\n  grid: {\n    paddingTop: '0em',\n  },\n  link: {\n    color: 'rgb(17, 179, 187)',\n    textDecoration: 'none',\n  },\n  sidebarLink: {\n    color: '#212121',\n    textDecoration: 'none',\n  },\n  code: theme => ({\n    display: 'none',\n    padding: 0,\n    margin: 0,\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    '& pre': {\n      overflow: 'auto',\n      margin: '0px !important',\n      borderRadius: '0px !important',\n    },\n  }),\n  mainSection: {\n    lineHeight: '1.7',\n    marginBottom: '1em',\n  },\n  sidebar: {\n    backgroundColor: '#E0E0E0',\n    padding: '2em',\n    lineHeight: '1.7',\n    borderLeft: '1px solid #d4d4d4'\n  },\n  sidebarLinks: {\n    listStyleType: 'none',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  list: {\n    paddingLeft: '1em',\n    paddingTop: '0.5em',\n    paddingBottom: '0.5em',\n  },\n  display1: {\n    paddingTop: '1.5em',\n    paddingBottom: '1em',\n  },\n  headline: {\n    marginTop: '0.5em'\n  },\n  title: {\n    marginTop: '0.5em'\n  },\n  caption: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '-1em',\n    marginBottom: '0.5em'\n  },\n  warningContainer: {\n    backgroundColor: '#3D5AFE',\n    color: '#fff',\n    borderRadius: '0.25em',\n    padding: '0.25em',\n    marginTop: '1em'\n  }\n}","import React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport marked from 'marked';\nimport prism from '../utils/prism';\n\n//\n// Based on https://github.com/mui-org/material-ui/blob/v1-beta/docs/src/modules/components/MarkdownElement.js\n//\n\nconst renderer = new marked.Renderer();\n\nrenderer.heading = (text, level) => {\n  const escapedText = text\n    .toLowerCase()\n    .replace(/=&gt;|&lt;| \\/&gt;|<code>|<\\/code>/g, '')\n    .replace(/[^\\w]+/g, '-');\n\n  return (\n    `\n    <h${level}>\n      <a class=\"anchor-link\" id=\"${escapedText}\"></a>${text}` +\n    `<a class=\"anchor-link-style\" href=\"#${escapedText}\">\n        <svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M46.9 13.9c-.5-.6-1.2-.94-2.07-.94h-6.67l1.86-8.98c.17-.85 0-1.7-.52-2.3-.48-.6-1.2-.94-2.07-.94-1.6 0-3.2 1.27-3.54 2.93l-.5 2.42c0 .07-.07.13-.07.2l-1.37 6.62H20.7l1.88-8.96c.16-.85 0-1.7-.53-2.3-.48-.6-1.2-.94-2.07-.94-1.65 0-3.2 1.27-3.56 2.93l-.52 2.58v.08l-1.37 6.64H7.3c-1.67 0-3.22 1.3-3.58 2.96-.16.86 0 1.7.52 2.3.48.6 1.2.93 2.07.93h6.97l-2 9.65H4c-1.67 0-3.22 1.27-3.56 2.94-.2.8 0 1.67.5 2.27.5.6 1.2.93 2.08.93H10l-1.84 9.05c-.2.84 0 1.67.52 2.3.5.6 1.25.92 2.08.92 1.66 0 3.2-1.3 3.55-2.94l1.94-9.33h11.22l-1.87 9.05c-.15.84.03 1.67.53 2.3.5.6 1.2.92 2.07.92 1.65 0 3.22-1.3 3.56-2.94l1.9-9.33h7c1.6 0 3.2-1.28 3.53-2.93.2-.87 0-1.7-.52-2.3-.48-.62-1.2-.96-2.05-.96h-6.7l2.02-9.65h6.93c1.67 0 3.22-1.27 3.56-2.92.2-.85 0-1.7-.5-2.3l-.04.03zM17.53 28.77l1.95-9.65H30.7l-1.97 9.66H17.5h.03z\"/></g></svg>\n      </a></h${level}>\n  `\n  );\n};\n\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  // prism uses the following class prefix.\n  langPrefix: 'language-',\n  highlight(code, lang) {\n    let language;\n    switch (lang) {\n      case 'diff':\n        language = prism.languages.diff;\n        break;\n\n      case 'css':\n        language = prism.languages.css;\n        break;\n\n      case 'json':\n        language = prism.languages.json;\n        break;\n\n      case 'js':\n      case 'jsx':\n      default:\n        language = prism.languages.jsx;\n        break;\n    }\n\n    return prism.highlight(code, language);\n  },\n  renderer,\n});\n\nconst styles = theme => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 16,\n    marginTop: theme.spacing.unit * 1,\n    marginBottom: theme.spacing.unit * 1,\n    padding: `0 ${theme.spacing.unit}px`,\n    color: theme.palette.text.primary,\n    '& .anchor-link': {\n      marginTop: -theme.spacing.unit * 12, // Offset for the anchor.\n      position: 'absolute',\n    },\n    '& pre, & pre[class*=\"language-\"]': {\n      margin: `${theme.spacing.unit}px 0`,\n      padding: '12px 18px',\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 3,\n      overflow: 'auto',\n    },\n    '& code': {\n      display: 'inline-block',\n      lineHeight: 1.6,\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n      padding: '3px 6px',\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.background.paper,\n      fontSize: 14,\n    },\n    '& p code, & ul code, & pre code': {\n      fontSize: 14,\n      lineHeight: 1.6,\n    },\n    '& h1': {\n      ...theme.typography.display2,\n      color: theme.palette.text.secondary,\n      margin: '0.7em 0',\n    },\n    '& h2': {\n      ...theme.typography.display1,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em',\n    },\n    '& h3': {\n      ...theme.typography.headline,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em',\n    },\n    '& h4': {\n      ...theme.typography.title,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em',\n    },\n    '& p, & ul, & ol': {\n      lineHeight: 1.6,\n    },\n    '& h1, & h2, & h3, & h4': {\n      '& code': {\n        fontSize: 'inherit',\n        lineHeight: 'inherit',\n      },\n      '& .anchor-link-style': {\n        opacity: 0,\n        // To prevent the link to get the focus.\n        display: 'none',\n      },\n      '&:hover .anchor-link-style': {\n        display: 'inline-block',\n        opacity: 1,\n        padding: `0 ${theme.spacing.unit}px`,\n        color: theme.palette.text.hint,\n        '&:hover': {\n          color: theme.palette.text.secondary,\n        },\n        '& svg': {\n          width: '0.55em',\n          height: '0.55em',\n          fill: 'currentColor',\n        },\n      },\n    },\n    '& table': {\n      width: '100%',\n      display: 'block',\n      overflowX: 'auto',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      overflow: 'hidden',\n    },\n    '& thead': {\n      fontSize: 12,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary,\n    },\n    '& tbody': {\n      fontSize: 13,\n      lineHeight: 1.5,\n      color: theme.palette.text.primary,\n    },\n    '& td': {\n      borderBottom: `1px solid ${theme.palette.text.lightDivider}`,\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 5}px ${theme.spacing.unit}px ${theme\n        .spacing.unit * 3}px`,\n      textAlign: 'left',\n    },\n    '& td:last-child': {\n      paddingRight: theme.spacing.unit * 3,\n    },\n    '& td compact': {\n      paddingRight: theme.spacing.unit * 3,\n    },\n    '& td code': {\n      fontSize: 13,\n      lineHeight: 1.6,\n    },\n    '& th': {\n      whiteSpace: 'pre',\n      borderBottom: `1px solid ${theme.palette.text.lightDivider}`,\n      padding: `0 ${theme.spacing.unit * 5}px 0 ${theme.spacing.unit * 3}px`,\n      textAlign: 'left',\n    },\n    '& th:last-child': {\n      paddingRight: theme.spacing.unit * 3,\n    },\n    '& tr': {\n      height: 48,\n    },\n    '& thead tr': {\n      height: 64,\n    },\n    '& strong': {\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    '& blockquote': {\n      borderLeft: `5px solid ${theme.palette.text.hint}`,\n      background: theme.palette.background.paper,\n      padding: `${theme.spacing.unit / 2}px ${theme.spacing.unit * 3}px`,\n      margin: `${theme.spacing.unit * 3}px 0`,\n    },\n    '& a, & a code': {\n      // Style taken from the Link component\n      color: theme.palette.secondary.A400,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n    '& .token.punctuation': {\n      color: '#757575'\n    }\n  },\n});\n\ntype Props = {\n  classes: Object,\n  className?: string,\n  text: string,\n};\n\nfunction MarkdownElement(props: Props) {\n  const { classes, className, text, ...other } = props;\n\n  /* eslint-disable react/no-danger */\n  return (\n    <div\n      className={classNames(classes.root, 'markdown-body', className)}\n      dangerouslySetInnerHTML={{ __html: marked(text) }}\n      {...other}\n    />\n  );\n  /* eslint-enable */\n}\n\nexport default withStyles(styles, { flip: false })(MarkdownElement);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Collapse from '@material-ui/core/Collapse';\nimport DataIcon from '@material-ui/icons/Code';\nimport SchemaIcon from '@material-ui/icons/Description';\nimport UiSchemaIcon from '@material-ui/icons/ViewQuilt';\nimport { getData } from '@jsonforms/core';\nimport MarkdownElement from './MarkdownElement';\n\n//\n// Based on https://github.com/mui-org/material-ui/blob/v1-beta/docs/src/modules/components/Demo.js\n//\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: 40,\n    marginTop: 20,\n    marginLeft: -theme.spacing.unit * 2,\n    marginRight: -theme.spacing.unit * 2,\n    [theme.breakpoints.up('sm')]: {\n      padding: `0 ${theme.spacing.unit}px`,\n      marginLeft: 0,\n      marginRight: 0,\n    },\n  },\n  demo: theme.mixins.gutters({\n    backgroundColor: theme.palette.background.contentFrame,\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing.unit * 3,\n      paddingRight: theme.spacing.unit * 3,\n      paddingTop: theme.spacing.unit * 6,\n    },\n  }),\n  code: {\n    display: 'none',\n    padding: 0,\n    margin: 0,\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    '& pre': {\n      overflow: 'auto',\n      margin: '0px !important',\n      borderRadius: '0px !important',\n    },\n  },\n  schemaButton: {\n    display: 'none',\n    flip: false,\n    zIndex: 10,\n    position: 'absolute',\n    top: 2,\n    right: theme.spacing.unit * 2,\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  uischemaButton: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      flip: false,\n      zIndex: 10,\n      position: 'absolute',\n      top: 2,\n      right: theme.spacing.unit * 8,\n    },\n  },\n  data: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      flip: false,\n      zIndex: 10,\n      position: 'absolute',\n      top: 2,\n      right: theme.spacing.unit * 14,\n    },\n  },\n});\n\nclass Demo extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataOpen: props.js === undefined,\n      schemaOpen: false,\n      uischemaOpen: false,\n    };\n  }\n\n\n  handleClickOpenSchema = () => {\n    this.setState({\n      schemaOpen: !this.state.schemaOpen,\n      uischemaOpen: false,\n      dataOpen: false,\n    });\n  };\n\n  handleClickOpenUiSchema = () => {\n    this.setState({\n      uischemaOpen: !this.state.uischemaOpen,\n      schemaOpen: false,\n      dataOpen: false,\n    });\n  };\n\n  handleClickOpenData = () => {\n    this.setState({\n      uischemaOpen: false,\n      schemaOpen: false,\n      dataOpen: !this.state.dataOpen\n    });\n  };\n\n  render() {\n    const { classes, js: DemoComponent, schema, uischema, data } = this.props;\n    const dataAsString = JSON.stringify(data, null, 2);\n    const schemaAsString = JSON.stringify(schema, null, 2);\n    const uiSchemaAsString = JSON.stringify(uischema, null, 2);\n    const { schemaOpen, uischemaOpen, dataOpen } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <Tooltip title={schemaOpen ? 'Hide schema' : 'Show schema'} placement=\"top\">\n          <IconButton onClick={this.handleClickOpenSchema} className={classes.schemaButton}>\n            <SchemaIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={uischemaOpen ? 'Hide UI schema' : 'Show UI schema'} placement=\"top\">\n          <IconButton onClick={this.handleClickOpenUiSchema} className={classes.uischemaButton}>\n            <UiSchemaIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={dataOpen ? 'Hide data' : 'Show data'} placement=\"top\">\n          <IconButton onClick={this.handleClickOpenData} className={classes.data}>\n            <DataIcon/>\n          </IconButton>\n        </Tooltip>\n\n        <Collapse in={schemaOpen} unmountOnExit>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`json\\n${schemaAsString}\\n\\`\\`\\``} />\n        </Collapse>\n\n        <Collapse in={uischemaOpen} unmountOnExit>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`json\\n${uiSchemaAsString}\\n\\`\\`\\``} />\n        </Collapse>\n\n        <Collapse in={dataOpen} unmountOnExit>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`json\\n${dataAsString}\\n\\`\\`\\``} />\n        </Collapse>\n\n        {\n          this.props.js &&\n          <div className={classes.demo}>\n            <DemoComponent/>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nDemo.propTypes = {\n  classes: PropTypes.object.isRequired,\n  js: PropTypes.func,\n  schema: PropTypes.object.isRequired,\n  uischema: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  data: getData(state),\n});\n\nexport default connect(\n  mapStateToProps\n)(withStyles(styles)(Demo));\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport commonStyles from \"./styles\";\n\nconst styles = () => ({\n  headline: commonStyles.headline,\n  link: commonStyles.link,\n  type:  {\n    color: '#424242',\n  },\n});\n\nconst PropHeader = ({ classes, title, type, link }) => (\n  <Typography\n    variant='headline'\n    className={classes.headline}\n  >\n    <code>{title}</code>&nbsp;\n    {\n      link ?\n        <span>(<a href={link} className={classes.link}>{type}</a>)</span> :\n        type &&\n          <span className={classes.type}>({type})</span>\n    }\n  </Typography>\n);\n\nexport default withStyles(styles)(PropHeader);\n","import React from 'react';\nimport commonStyles from \"./styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = () => ({\n  link: commonStyles.link\n});\n\nconst ApiLink = ({ classes, link, children }) => (\n  <a href={link} className={classes.link}>{children}</a>\n);\n\nexport default withStyles(styles)(ApiLink)","import React from 'react';\n\nexport default ({ width = 300, height = 200, color = \"#000000\" }) => {\n  return (\n    <svg\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox='0 0 150 100'\n      width={width}\n      height={height}\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g xmlns=\"http://www.w3.org/2000/svg\" transform=\"translate(0.000000,95.000000) scale(0.100000,-0.100000)\" fill={color} stroke=\"none\" id=\"g6\">\n        <path d=\"M161 937 c-49 -24 -62 -65 -70 -221 -7 -156 -15 -177 -67 -190 -18 -5 -24 -13 -24 -35 0 -22 7 -31 30 -41 48 -20 57 -50 62 -212 4 -121 8 -152 24 -180 25 -42 91 -67 131 -49 36 16 28 52 -14 63 -18 5 -36 14 -40 21 -4 6 -10 75 -13 152 -6 151 -22 208 -69 231 l-22 11 25 17 c47 30 59 70 65 219 6 146 10 157 58 157 28 0 37 14 29 46 -5 20 -12 24 -44 24 -20 0 -48 -6 -61 -13z\" id=\"path8\"/>\n        <path d=\"M1204 936 c-11 -29 1 -51 28 -54 49 -6 58 -33 58 -172 0 -141 13 -185 64 -209 l29 -14 -25 -13 c-46 -24 -61 -75 -68 -229 -3 -77 -9 -146 -13 -152 -4 -7 -22 -16 -40 -21 -22 -6 -33 -15 -35 -30 -5 -32 33 -47 86 -32 66 17 74 38 83 210 8 162 23 214 66 231 36 13 32 64 -6 77 -46 16 -54 44 -60 202 -7 158 -17 191 -67 210 -38 15 -94 12 -100 -4z\" id=\"path10\"/>\n        <path d=\"M467 923 c-15 -2 -43 -20 -62 -38 -45 -45 -47 -71 -43 -450 4 -430 -23 -400 368 -400 395 0 365 -37 365 445 0 479 27 444 -345 446 -140 1 -268 0 -283 -3z m553 -73 c19 -19 20 -33 20 -372 0 -313 -2 -353 -17 -370 -15 -17 -37 -18 -290 -18 -260 0 -274 1 -293 20 -19 19 -20 33 -20 370 0 337 1 351 20 370 19 19 33 20 290 20 257 0 271 -1 290 -20z\" id=\"path12\"/>\n        <path d=\"M500 740 c0 -19 7 -20 235 -20 228 0 235 1 235 20 0 19 -7 20 -235 20 -228 0 -235 -1 -235 -20z\" id=\"path14\"/>\n        <path d=\"M500 590 c0 -19 7 -20 235 -20 228 0 235 1 235 20 0 19 -7 20 -235 20 -228 0 -235 -1 -235 -20z\" id=\"path16\"/>\n        <path d=\"M500 410 c0 -19 7 -20 235 -20 228 0 235 1 235 20 0 19 -7 20 -235 20 -228 0 -235 -1 -235 -20z\" id=\"path18\"/>\n        <path d=\"M500 240 c0 -19 7 -20 235 -20 228 0 235 1 235 20 0 19 -7 20 -235 20 -228 0 -235 -1 -235 -20z\" id=\"path20\"/>\n      </g>\n    </svg>\n  )\n}","import React from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\nimport Radium from 'radium';\n\nconst RadiumLink = Radium(Link);\n\n// TODO: classes should be object with key-value-pairs where values map to stylename\nexport const Links = ({ currentLocation, classes, url, routes, indentation = 1, history }) => {\n  return routes.map(route => {\n    const slug = `${url}/${route.slug}`;\n    return (\n      <React.Fragment key={slug}>\n        <RadiumLink\n          key={route.slug}\n          to={`${url}/${route.slug}`}\n          className={classes.sidebarLink}\n        >\n          {\n            (currentLocation === `${url}/${route.slug}`) ?\n              <span className={classes.currentRoute}\n              >\n                  <span style={{\n                    color: '#ff1744',\n                    marginRight: '0.25em',\n                    marginLeft: `${indentation * 0.5}em`\n                  }}\n                  >\n                    |\n                  </span>\n                {route.name}\n                </span> :\n              <span style={{\n                marginLeft: `${indentation * 0.5}em`\n              }}>{route.name}</span>\n          }\n        </RadiumLink>\n        <li>\n          {\n            currentLocation.indexOf(`${url}/${route.slug}`) > -1 &&\n            <ul className={classes.sidebarLinks} style={{ paddingLeft: `${indentation * 10}px`}}>\n              {\n                route.routes &&\n                <ConnectedLinks\n                  currentLocation={currentLocation}\n                  classes={classes}\n                  url={url + `/${route.slug}`}\n                  routes={route.routes}\n                  indentation={indentation + 1}\n                />\n              }\n            </ul>\n          }\n        </li>\n      </React.Fragment>\n    );\n  });\n};\n\nconst ConnectedLinks = withRouter(Links);\n\nexport default ConnectedLinks;\n","import { HashLink } from 'react-router-hash-link'\nimport { Link } from 'react-router-dom';\nimport Radium from 'radium';\n\nimport commonStyles from './styles';\nimport MarkdownElement from './MarkdownElement';\nimport Demo from './Demo';\nimport PropHeader from './PropHeader';\nimport ApiLink from './ApiLink';\nimport Logo from './Logo';\nimport Links from './Links';\n\nexport { Links };\nexport { Demo };\nexport { commonStyles };\nexport { MarkdownElement };\nexport { PropHeader };\nexport { ApiLink }\nexport { Logo };\n\n\nexport const RadiumLink = Radium(Link);\nexport const RadiumHashLink = Radium(HashLink);\n","import { combineReducers, createStore } from 'redux';\nimport { Actions, jsonformsReducer } from '@jsonforms/core';\nimport {\n  materialFields,\n  materialRenderers,\n  materialCategorizationTester,\n  MaterialCategorizationLayout\n} from '@jsonforms/material-renderers';\n\nexport const createJsonFormsStore = ({ data, schema, uischema }) => {\n  const store = createStore(\n    combineReducers({ jsonforms: jsonformsReducer() }),\n    {\n      jsonforms: {\n        renderers: materialRenderers\n          .concat([{ tester: materialCategorizationTester, renderer: MaterialCategorizationLayout}]),\n        fields: materialFields,\n      }\n    }\n  );\n\n  store.dispatch(Actions.init(data, schema, uischema));\n\n  return store;\n};","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport FeaturesIcon from '@material-ui/icons/Report';\nimport CustomizeIcon from '@material-ui/icons/Brush';\nimport { JsonForms }  from '@jsonforms/react'\nimport corePackageJson from '@jsonforms/core/package'\nimport { Provider } from 'react-redux';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport reactLogo from './reactLogo.svg';\nimport schemaLogo from './schemalogo.svg';\nimport reduxLogo from './reduxLogo.svg';\n\nimport {commonStyles, Demo, Logo, RadiumLink} from '../../common'\nimport {createJsonFormsStore} from \"../../common/store\";\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1,\n  },\n  card: {\n    margin: 'auto',\n    paddingLeft: '10%',\n    paddingRight: '10%',\n    backgroundColor: '#212121',\n    color: '#fff',\n    paddingTop: '1.5em',\n    paddingBottom: '1.5em'\n  },\n  logo: {\n    textAlign: 'center',\n    marginTop: '0.5em',\n    paddingTop: '0.25em',\n    paddingBottom: '0.5em',\n    fontSize: '2em',\n  },\n  icon: {\n    color: '#fff',\n    width: 'auto',\n    height: '6em',\n  },\n  iconWrapper: {\n    height: '3em',\n    width: '3em',\n  },\n  schemaLogo: {\n    padding: '18px',\n    height: '108px',\n    width: '108px'\n  },\n  details: {\n    color: '#9b9b9b',\n    display: 'flex',\n    fontWeight: 'bold',\n    flexDirection: 'column',\n    fontSize: '1.5em',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n  },\n  container: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  containerText: {\n    // alignItems: 'center',\n    display: 'flex',\n    // justifyContent: 'center',\n    maxWidth: '1200px',\n    textAlign: 'center',\n    margin: 'auto',\n  },\n  link: commonStyles.link,\n  button: {\n    backgroundColor: '#11b3bb',\n    color: 'white',\n    margin: '1em'\n  },\n\n});\n\nconst store = createJsonFormsStore({\n  data: { firstName: 'Max Power' },\n  schema,\n  uischema\n  });\n\nconst Home = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid item xs={12}>\n          <div className={classes.logo}>\n            <strong>JSON</strong>Forms\n            <div style={{ paddingTop: '0.5em'}}>\n              <Logo/>\n            </div>\n            More forms. Less code.\n          </div>\n\n          <div className={classes.container}>\n            <Typography variant={'headline'} style={{ color: '#747474' }}>\n              Complex forms in the blink of an eye\n            </Typography>\n          </div>\n          <div className={classes.container}>\n            <Typography>\n              Version {corePackageJson.version}\n            </Typography>\n          </div>\n\n          <div className={classes.container}>\n            <RadiumLink\n              to='/docs/getting-started'\n              className={classes.link}\n            >\n              <Button className={classes.button}>\n                Get started\n              </Button>\n            </RadiumLink>\n          </div>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Grid container justify={'center'} align={'center'}>\n                <Grid item xs={4}>\n                  <img src={schemaLogo} alt='JSON Schema Logo' className={classes.schemaLogo} />\n                  <div className={classes.container}>\n                    <div className={classes.details}>\n                      Declare your forms as JSON based on a JSON Schema\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={4}>\n                  <FeaturesIcon className={classes.icon} />\n                  <div className={classes.container}>\n                    <div className={classes.details}>\n                      Fully-featured forms including data-binding, input validation, and rule-based visibility\n                      out-of-the-box\n                    </div>\n                  </div>\n                </Grid>\n\n                <Grid item xs={4}>\n                  <CustomizeIcon className={classes.icon} />\n                  <div className={classes.container}>\n                    <div className={classes.details}>\n                      Designed for customizability from custom styling to custom widgets\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n\n\n        <Grid item xs={12} className={classes.card} style={{ backgroundColor: '#eeeeee', marginTop: 0, padding: '1em' }}>\n          <Grid container>\n            <Grid item xs={4}/>\n            <Grid item xs={4} >\n              <Grid container justify='center' align='center'>\n                <img src={reactLogo} alt=\"React logo\" style={{ height: '80px' }}/>\n                <img src={reduxLogo} alt=\"Redux logo\" style={{ height: '80px' }}/>\n                <Typography variant='title' style={{ color: '#212121' }}>\n                  JSON Forms currently primarily supports React/Redux based applications\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item xs={4}/>\n            </Grid>\n          </Grid>\n\n        <Grid item xs={12} className={classes.container}>\n          <Provider store={store}>\n            <Demo\n              js={() => <JsonForms /> }\n              schema={schema}\n              uischema={uischema}\n            />\n          </Provider>\n        </Grid>\n      </Grid>\n    </div>\n);\n};\n\nexport default withStyles(styles)(Home);\n","import React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from 'react-router-dom';\nimport { commonStyles } from '../common';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1,\n  },\n  card: {\n    padding: 10,\n    margin: 'auto',\n  },\n  container: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  display1: commonStyles.display1,\n  p: {\n    paddingTop: '0.5em'\n  },\n  link: commonStyles.link\n});\n\nconst Imprint = ({ classes }) => (\n  <div className={classes.root}>\n    <Grid container spacing={0}>\n      <Grid item xs={12} >\n        <div className={classes.container}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography variant=\"display1\" className={classes.display1}>Imprint</Typography>\n              <address>\n                EclipseSource München GmbH<br/>\n                Agnes-Pockels-Bogen 1<br/>\n                80992 München<br/>\n                Germany<br/>\n              </address>\n\n              <p className={classes.p}>\n                Email: munich@eclipsesource.com<br/>\n                Web: http://eclipsesource.com/munich<br/>\n                Phone: +49 89 21 555 301<br/>\n                Fax: +49 89 21 555 302<br/>\n              </p>\n\n              <p className={classes.p}>\n                General Managers: Dr. Jonas Helming, Dr. Maximilian Kögel<br/>\n                Registered Office: Agnes-Pockels-Bogen 1, 80992 München, Commercial Register München, HRB 191789\n              </p>\n\n              <p className={classes.p}>\n                <Link\n                  className={classes.link}\n                  to=\"/privacy-policy\"\n                >\n                  Privacy Policy\n                </Link>\n              </p>\n\n              <p className={classes.p}>\n                <Link\n                  className={classes.link}\n                  to=\"/cookie-policy\"\n                >\n                  Cookie Policy\n                </Link>\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </Grid>\n    </Grid>\n  </div>\n);\n\nexport default withStyles(styles)(Imprint);\n","export const IntroCode = {\n  schema: {\n    type: 'object',\n    properties: {\n      name: {\n        type: 'string'\n      },\n      description: {\n        type: 'string'\n      },\n      done: {\n        type: 'boolean'\n      },\n      rating: {\n        type: 'integer'\n      }\n    },\n    required: ['name']\n  },\n  uischema: {\n    type: 'VerticalLayout',\n    elements: [\n      {\n        type: 'Control',\n        scope: '#/properties/name'\n      },\n      {\n        type: 'Control',\n        scope: '#/properties/description',\n        options: {\n          multi: true\n        }\n      },\n      {\n        type: 'Control',\n        label: 'Rating',\n        scope: '#/properties/rating'\n      },\n      {\n        type: 'Control',\n        label: 'Done?',\n        scope: '#/properties/done'\n      }\n    ]\n  },\n};\n","import React from 'react';\n\nexport class Rating extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: props.value + 1,\n      hoverAt: null\n    };\n  }\n\n  static getDerivedStateFromProps = (nextProps, prevState) => {\n    if (prevState.rating !== nextProps.value) {\n      return {\n        rating: nextProps.value,\n        hoverAt: prevState.hoverAt\n      };\n    }\n    return null;\n  };\n\n  handleMouseOver(idx) {\n    this.setState({\n      hoverAt: idx + 1\n    });\n  }\n\n  handleMouseOut() {\n    this.setState({\n      hoverAt: null\n    });\n  }\n\n  handleClick(idx) {\n    this.setState({\n      rating: idx + 1\n    });\n  }\n\n  render() {\n    const { onClick } = this.props;\n\n    return (\n      <div>\n        {\n          [1, 2, 3, 4, 5].map(i => {\n            const rating = this.state.hoverAt != null ? this.state.hoverAt : this.state.rating;\n\n            return <span onMouseOver={() => this.handleMouseOver(i)}\n                         onMouseOut={() => this.handleMouseOut()}\n                         onClick={() => {\n                           this.handleClick(i);\n                           onClick({ value: i});\n                         }}\n                         key={i}\n            >\n              {i < rating ? '\\u2605' : '\\u2606'}\n            </span>;\n          })\n        }\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { mapStateToControlProps, mapDispatchToControlProps } from '@jsonforms/core';\nimport { connect } from 'react-redux';\nimport { Rating } from './Rating';\n\nconst RatingControl = ({ data, handleChange, path }) => (\n  <Rating\n    value={data}\n    onClick={ev => handleChange(path, Number(ev.value))}\n  />\n);\n\nexport default connect(\n  mapStateToControlProps,\n  mapDispatchToControlProps,\n)(RatingControl);\n","import { rankWith, scopeEndsWith } from '@jsonforms/core';\n\nexport default rankWith(Number.MAX_VALUE, scopeEndsWith('rating'));\n","import React from 'react';\nimport Radium from 'radium';\nimport { Link } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { JsonForms } from '@jsonforms/react';\nimport { registerRenderer } from '@jsonforms/core';\nimport { IntroCode } from './listings/intro';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from \"./ratingControlTester\";\nimport { Demo, MarkdownElement, commonStyles, Logo } from '../../common';\nimport {createJsonFormsStore} from \"../../common/store\";\n\nconst RadiumLink = Radium(Link);\n\nconst styles = theme => ({\n  code: commonStyles.code(theme),\n  link: commonStyles.link,\n  display1: commonStyles.display1,\n  headline: commonStyles.headline,\n  caption: commonStyles.caption,\n  list: commonStyles.list\n});\n\nconst Intro = ({ classes }) => {\n\n  const storeWithoutCustomControl = createJsonFormsStore({\n    data: {},\n    schema: IntroCode.schema,\n    uischema: IntroCode.uischema\n  });\n\n  const storeWithRatingControlExample = createJsonFormsStore({\n    data: {},\n    schema: IntroCode.schema,\n    uischema: IntroCode.uischema\n  });\n\n  return (\n    <div>\n      <Typography variant='display1' className={classes.display1}>\n        What is JSONForms?\n      </Typography>\n\n      <p>\n        JSON Forms is a declarative framework for efficiently building form-based web UIs.\n        These UIs are targeted at entering, modifying and viewing data and are usually embedded within an application.\n      </p>\n\n      <Typography variant={'headline'} className={classes.headline}>\n        Why do we need such a framework?\n      </Typography>\n      <p>\n        Writing HTML templates and Javascript for data binding by hand is hard, especially in applications\n        of reasonable size.\n        Furthermore a form is often more than just a collection of input fields, usually more\n        advanced functionality is required, e.g. validation or conditional visibility.\n      </p>\n      <p>\n        JSONForms utilizes the capabilities of JSON and JSON schema and\n        provides a simple and declarative way of describing forms.\n        Forms are then rendered with a UI framework, currently one that is based on React/Redux.\n      </p>\n\n      <Typography variant={'headline'} className={classes.headline}>\n        How does it work?\n      </Typography>\n      <p>\n        Any UI is defined by using two schemata:\n      </p>\n\n      <ul className={classes.list}>\n        <li>The data/JSON schema defines the underlying data to be shown in the UI (objects, properties, and their types).</li>\n        <li>The UI schema defines how this data is rendered as a form, e.g. the order of controls, their visibility, and the layout.</li>\n      </ul>\n\n      <p>\n        Both artifacts are interpreted during runtime by the framework and mapped to respective UI components,\n        which already feature data binding, validation, etc.\n      </p>\n\n      <p>\n        Let's look at an example: Below is given a JSON schema on the left hand side describing a task while on the\n        right hand side there's an UI schema, which defines four controls which are to be arranged in a vertical fashion.\n        The result of rendering the form with JSON Forms can be seen at the bottom.\n      </p>\n\n      <Grid container style={{ marginTop: '0.5em' }} justify={'center'}>\n        <Grid item xs={5}>\n          <Typography variant='title' style={{ textAlign: 'center' }}>JSON Schema</Typography>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`json\\n${JSON.stringify(IntroCode.schema, null, 2)}\\n\\`\\`\\``} />\n        </Grid>\n        <Grid item xs={1} style={{ alignItems: 'center' }}>\n          <Typography variant='title' style={{ textAlign: 'center' }}>+</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant='title' style={{ textAlign: 'center' }}>UI Schema</Typography>\n          <MarkdownElement dir=\"ltr\" className={classes.code} text={`\\`\\`\\`json\\n${JSON.stringify(IntroCode.uischema, null, 2)}\\n\\`\\`\\``} />\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant='title' style={{ textAlign: 'center' }}>⬇</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant='title' style={{ textAlign: 'center' }}>\n            <Logo width={45} height={30}/>\n          </Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant='title' style={{ textAlign: 'center' }}>⬇</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Provider store={storeWithoutCustomControl}>\n            <Demo\n              js={() => <JsonForms /> }\n              schema={IntroCode.schema}\n              uischema={IntroCode.uischema}\n            />\n          </Provider>\n          <Typography variant={'caption'} className={classes.caption}>The form as rendered by JSON Forms</Typography>\n        </Grid>\n      </Grid>\n\n      <p>\n        JSON Forms provides default renderers for all data types, however, you can change the way things are rendered by\n        providing custom renderers. An example is given below where we replaced the control for the rating property:\n      </p>\n\n      <Provider store={storeWithRatingControlExample} >\n        <Demo\n          js={() => {\n            storeWithRatingControlExample.dispatch(registerRenderer(ratingControlTester, RatingControl));\n            return (\n              <JsonForms\n                schema={IntroCode.schema}\n                uischema={IntroCode.uischema}\n              />\n            )\n          }}\n          schema={IntroCode.schema}\n          uischema={IntroCode.uischema}\n        />\n      </Provider>\n      <Typography variant={'caption'} className={classes.caption}>The same form now rendered with a custom control renderer</Typography>\n\n      If you are interested in learning more about JSON Forms, check out\n      the <RadiumLink to={'/docs/getting-started'} className={classes.link}>Getting started</RadiumLink> section.\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Intro);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport commonStyles from \"../../common/styles\";\nimport {RadiumLink} from \"../../common\";\n\nconst styles = () => ({\n  link: commonStyles.link,\n  list: commonStyles.list,\n  code: commonStyles.code,\n  display1: commonStyles.display1,\n});\n\nconst GettingStarted = ({ classes }) => {\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Getting started\n      </Typography>\n      <p>\n        This section describes how you can get quickly started with JSON Forms.\n      </p>\n      <ol className={classes.list}>\n        <li>\n          Clone the <a href=\"https://github.com/eclipsesource/jsonforms-react-seed\" className={classes.link}>seed</a> app with:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`bash\\ngit clone https://github.com/eclipsesource/jsonforms-react-seed.git\\n\\`\\`\\``}\n          />\n        </li>\n        <li>\n          Install dependencies with:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`bash\\nnpm install\\n\\`\\`\\``}\n          />\n        </li>\n        <li>\n          Run the app with:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`bash\\nnpm run start\\n\\`\\`\\``}\n          />\n        </li>\n      </ol>\n      <p>\n        For more info about the seed app, please see the corresponding README file of the\n        the <a href=\"https://github.com/eclipsesource/jsonforms-react-seed\" className={classes.link}>seed repo</a>.\n      </p>\n      <p>\n        For a more detailed tutorial about the usage of JSON Forms, please\n        see <RadiumLink to='/docs/tutorial' className={classes.link}>our tutorial</RadiumLink>.\n      </p>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(GettingStarted);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Provider } from 'react-redux';\nimport { registerRenderer } from '@jsonforms/core';\nimport { JsonForms } from '@jsonforms/react';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport Demo from \"../../common/Demo\";\nimport commonStyles from '../../common/styles';\nimport { createJsonFormsStore } from \"../../common/store\";\n/* eslint import/no-webpack-loader-syntax: off */\nconst seed = require('!raw-loader!./listings/seed.md');\nconst ratingControlCode = require('!raw-loader!./RatingControl.jsx');\nconst ratingControlTesterCode = require('!raw-loader!./ratingControlTester');\nconst registerRendererCode = require('!raw-loader!./listings/registerRenderer.md');\n\n\nconst ratingData = {\n  rating: 2,\n};\n\nconst ratingSchema = {\n  type: 'object',\n  properties: {\n    rating: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 5,\n    }\n  }\n};\n\nconst ratingUiSchema = {\n  type: 'Control',\n  scope: '#/properties/rating'\n};\n\nconst storeWithRatingControlExample = createJsonFormsStore({\n  data: ratingData,\n  schema: ratingSchema,\n  uischema: ratingUiSchema\n});\n\nconst styles = theme => ({\n  code: commonStyles.code(theme),\n  headline: commonStyles.headline,\n  title: {\n    marginTop: '0.5em'\n  },\n  display1: commonStyles.display1,\n  list: commonStyles.list,\n  link: commonStyles.link\n});\n\nexport const CustomRenderers = ({ classes }) => {\n  const store = createJsonFormsStore({\n    data: ratingData,\n    schema: ratingSchema,\n    uischema: ratingUiSchema\n  });\n\n  return (\n    <div>\n      <Typography variant={'display1'} className={classes.display1}>Custom Renderers</Typography>\n\n      <p>\n        The default renderers of JSON Forms are a good fit for most scenarios,\n        but there might be certain situations where you'd want to customize the rendered UI Schema elements.\n        JSON Forms allows for this by registering a custom renderer that produces a different UI\n        for a given UI Schema element.\n      </p>\n\n      <p>\n        In this section you will learn how to create and register a custom renderer for a control.\n        We will replace the default renderer for integer values of a rating property. By default an integer\n        property is rendered like this:\n      </p>\n\n      <Provider store={store} >\n        <Demo\n          js={() => <JsonForms />}\n          schema={ratingSchema}\n          uischema={ratingUiSchema}>\n        </Demo>\n      </Provider>\n\n      Our goal is to instead render the UI for rating depicted below:\n\n      <Provider store={storeWithRatingControlExample} >\n        <Demo\n          js={() => {\n            storeWithRatingControlExample.dispatch(registerRenderer(ratingControlTester, RatingControl));\n            return (<JsonForms />);\n          }}\n          schema={ratingSchema}\n          uischema={ratingUiSchema}\n        />\n      </Provider>\n\n      <Typography variant={'headline'}>\n        Running the seed\n      </Typography>\n      <p>\n        If you want to follow along with this tutorial, you may want to clone the seed repository\n        which basically is just a skeleton application scaffolded by create-react-app with redux\n        and JSON Forms dependencies added.\n      </p>\n\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`bash\\n${seed}\\n\\`\\`\\``}\n      />\n\n      <p>\n        Once the dependencies are installed and the local server has been started,\n        navigate to <a href=\"http://localhost:3000\" className={classes.link}>http://localhost:3000</a> in order\n        to see the application running.\n        The seed is described in more detail within the <code>README.md</code> file of\n        the <a href=\"https://github.com/eclipsesource/jsonforms-react-seed\"className={classes.link}>repo</a>, hence we\n        only focus on the most crucial parts of the app in the following.\n      </p>\n\n      <Typography variant={'headline'} className={classes.headline}>\n        Core concepts about rendering\n      </Typography>\n      <p>\n        Before explaining how to contribute a component (which will be referred to as \"custom control\") to JSON Forms,\n        we first explain how the basic process of rendering works.\n      </p>\n\n      <p>\n        JSON Forms maintains a registry of renderers (which are regular React components). When JSON Forms is instructed to\n        render a given UI schema to produce a form, it will start with the root element of the UI Schema and try to\n        find a renderer for this UI Schema element in its registry of renderers.\n      </p>\n      <p>\n        To find a matching renderer, JSON Forms relies on so-called testers.\n        Every renderer has a tester associated with its registration, which is a function of a UI schema and a\n        JSON schema returning a number.\n        The returned number is the priority which expresses if and how well a renderer can actually render the\n        given UI Schema Element (where <code>-1</code> aka <code>NOT_APPLICABLE</code>) means \"not at all\").\n      </p>\n      <p>\n        In order to create and register a renderer, we need to perform the following steps:\n      </p>\n\n      <ol className={classes.list}>\n        <li>Create a renderer (a React component)</li>\n        <li>Create a corresponding tester for the renderer</li>\n        <li>Register both the renderer and the tester with the framework</li>\n      </ol>\n\n      <p>\n        The seed app already contains all of the ingredients necessary to create a custom renderer,\n        which we'll use in the following.\n      </p>\n\n      <Typography variant='title' className={classes.title}>\n        1. Create a renderer\n      </Typography>\n      <p>\n      As mentioned previously, the seed app already features a component which we want to use as a renderer.\n      It's contained in <code>src/Rating.js</code> and is a rating control, i.e. it allows to set a value between 0 and 5\n      by selecting the appropriate number of stars. We won't go into detail about the control itself, but we should mention\n      that we need to provide an <code>onClick</code> property in order to allow specifying a callback which gets called\n      every time the user clicks on a star. We also need to suppy an initial <code>value</code>.\n      </p>\n\n      <p>\n        In order to leverage the React component to a JSON Forms compatible renderer, we need to connect it to the store.\n        This will allow us to retrieve the initial value and to emit events updating the respective value in the\n        store when the users clicks on a star. JSON Forms provides a\n        helper function <code>mapStateToControlProps</code> which already provides most of the necessary props for us.\n        In this case, the props are <code>data</code>, which is the actual data bit to be rendered, and <code>path</code>,\n        a dot-separated string, which is necessary to propagate an update back to the store.\n      </p>\n\n      <p>\n        For the <code>onClick</code> prop we pass the <code>handleChange</code> handler, which we retrieve\n        via another helper function provided by JSON Forms called <code>mapDispatchToControlProps</code>.\n        All the handler actually does is to emit a change with the new value.\n      </p>\n\n      <p>The complete code of <code>src/RatingControl.js</code> looks as follows:</p>\n\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n${ratingControlCode}\\n\\`\\`\\``}\n      />\n\n      <Typography variant='title' className={classes.title}>\n        2. Create a tester\n      </Typography>\n      <p>\n        Now that we have our renderer ready, we need to tell JSON Forms when we want to make use of it.\n        For that purpose we create a tester that checks if the corresponding UI schema element is a control\n        and whether it is bound to a path that ends with <code>rating</code>. If that is the case, we return a rank of\n        3. That is because the default renderer sets provide a rank with a value of 2, hence our tester will need to\n        rank the custom control higher a bit higher, such that it will be picked up for the rating control during rendering.\n        The <code>ratingControlTester.js</code> file contains the respective code as a default export.\n      </p>\n\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n${ratingControlTesterCode}\\n\\`\\`\\``}\n      />\n\n      <p>\n        Generally speaking, the testers API if made out of different predicates and functions that allow\n        for composition (e.g. <code>and</code> or <code>or</code>) such that it is easy to target specific parts\n        of the UI schema and/or JSON schema.\n      </p>\n\n      <Typography variant='title'>\n        3. Register the renderer\n      </Typography>\n      <p>\n        All there is left to do is to register the renderer with its tester. We can do so by calling\n        the <code>registerRenderer</code> action on the store. Within <code>index.js</code>, the following\n        statement registers the renderer.\n      </p>\n\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n${registerRendererCode}\\n\\`\\`\\``}\n      />\n\n      <p>\n        And that's it! The rating control will now be used to render the <code>rating</code> property.\n        It should be noted that in order to create a full-fledged control there's more work left,\n        since we did not cover concepts like validation or visibility.\n      </p>\n      <p style={{\n        backgroundColor: '#d1d1d1',\n        padding: '0.5em',\n        borderRadius: '0.5em',\n        marginTop: '0.5em',\n        marginBottom: '0.5em'\n      }}>\n        <strong>NOTE</strong>: We are working on the sections. Expect this page to be updated soon!\n      </p>\n    </div>\n\n);\n};\n\nexport default withStyles(styles)(CustomRenderers);\n","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Info from '@material-ui/icons/Info';\nimport commonStyles from \"./styles\";\n\nconst styles = {\n  alert: {\n    width: '100%',\n    height: '100%'\n  },\n  container: commonStyles.warningContainer\n};\n\nconst Warning = ({ classes, children }) => (\n  <Grid container className={classes.container}>\n    <Grid item xs={1}>\n      <Info className={classes.alert} />\n    </Grid>\n    <Grid item xs={11}>\n      {children}\n    </Grid>\n  </Grid>\n);\n\nexport default withStyles(styles)(Warning);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport commonStyles from \"../../common/styles\";\nimport { Link } from 'react-router-dom';\nimport Warning from \"../../common/Warning\";\n\nconst styles = () => ({\n  display1: commonStyles.display1,\n  link: commonStyles.link,\n  list: {\n    ...commonStyles.list,\n    listStyleType: 'square'\n  },\n  container: {\n    backgroundColor: '#3D5AFE',\n    color: '#fff',\n    borderRadius: '0.25em',\n    padding: '0.25em',\n    marginTop: '1em'\n  }\n});\n\nconst UiSchemaElements = ({ classes }) => (\n  <div>\n    <Typography\n      variant='display1'\n      className={classes.display1}\n    >\n      UI Schema Elements\n    </Typography>\n    <p>\n      The UI schema, which is passed to JSON Forms,\n      describes the general layout of a form and is just a regular JSON object.\n      It describes the form by means of different UI schema elements, which can often categorized\n      into either Controls or Layouts.\n    </p>\n\n    <Warning>\n      <p>\n        Please note that the UI schema hasn't been finalized yet!\n        We'll try keep changes to a minimum and only do them if it's an substantial improvement to the framework.\n      </p>\n      <p>Thanks for your understanding!</p>\n    </Warning>\n\n    <Typography variant='title' style={{ marginTop: '1em' }}>\n      Available elements\n    </Typography>\n\n    <ul className={classes.list}>\n      <li>\n        <Link to='/docs/uischema/controls' className={classes.link}>Controls</Link>\n      </li>\n      <li>\n        <Link to='/docs/uischema/layouts' className={classes.link}>Layout</Link>\n      </li>\n      <li>\n        <Link to='/docs/uischema/rules' className={classes.link}>Rules</Link>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default withStyles(styles)(UiSchemaElements);\n","export const UiSchemaElementsCode = {\n  controls: {\n    schema: {\n      'properties': {\n        'name': {  'type': 'string' }\n      }\n    },\n    uischema: {\n      type: 'Control',\n      scope: '#/properties/name'\n    },\n    data: {\n      name: 'Ottgar',\n    },\n  }\n};\n\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { JsonForms } from \"@jsonforms/react\";\nimport { Provider } from \"react-redux\";\nimport Radium from 'radium';\nimport {UiSchemaElementsCode} from \"./listings/uischema\";\nimport Demo from \"../../common/Demo\";\nimport commonStyles from \"../../common/styles\";\nimport PropHeader from \"../../common/PropHeader\";\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport {createJsonFormsStore} from \"../../common/store\";\nimport ApiLink from \"../../common/ApiLink\";\n\nconst styles = () => ({\n  code: commonStyles.code,\n  display1: commonStyles.display1,\n  headline: commonStyles.headline,\n  link: commonStyles.link,\n  caption: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '-1em',\n    marginBottom: '0.5em'\n  }\n});\n\nconst RadiumLink = Radium(Link);\n\nconst Controls = ({ classes }) => {\n  const store = createJsonFormsStore({\n    data: UiSchemaElementsCode.controls.data,\n    schema: UiSchemaElementsCode.controls.schema,\n    uischema: UiSchemaElementsCode.controls.uischema,\n  });\n\n  return (\n    <div>\n      <Typography\n        variant='display1'\n        className={classes.display1}\n      >\n        Controls\n      </Typography>\n      <p>\n        Controls represent the basic building blocks for creating forms.\n      </p>\n      <p>\n        A control is usually displaying the value of one property from the data in an UI element such as an input field.\n        How a control is rendered depends on the type of the property as defined in the JSON Schema,\n        e.g. a property of type <code>boolean</code> is rendered as a Checkbox by default.\n        Controls are of\n        type <ApiLink link='/api/core/interfaces/scopable.html'>Scopable</ApiLink> and\n        therefore have a <code>scope</code> property.\n      </p>\n\n      <PropHeader title='scope' type='string' />\n      <p>\n        The mandatory <code>scope</code> property, which expects a&nbsp;\n        <a href=\"https://spacetelescope.github.io/understanding-json-schema/structuring.html#reuse\"\n           className={classes.link}>\n          JSON schema reference\n        </a>&nbsp;, defines to which property of the data the control should be bound to.\n      </p>\n      <p>\n        For instance, let us suppose we want to create a control for the <code>name</code> property in this schema:\n      </p>\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`json\\n${JSON.stringify(UiSchemaElementsCode.controls.schema, null, 2)}\\n\\`\\`\\``}\n      />\n      <Typography variant='caption' className={classes.caption}>\n        JSON schema with a name property\n      </Typography>\n\n      <p>\n        The corresponding UI Schema needs to set the <code>type</code> of the UI Schema Element\n        to <code>Control</code> and set the <code>scope</code> to point to\n        the <code>name</code> property from the JSON schema as follows:\n      </p>\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`json\\n${JSON.stringify(UiSchemaElementsCode.controls.uischema, null, 2)}\\n\\`\\`\\``}\n      />\n      <Typography variant='caption' className={classes.caption}>\n        UI schema for binding a control against the name property\n      </Typography>\n\n      <p>\n        JSON Forms will render the following form from this UI Schema:\n      </p>\n\n      <Provider store={store} >\n        <Demo\n          js={() => {\n            return (\n              <JsonForms\n                schema={UiSchemaElementsCode.controls.schema}\n                uischema={UiSchemaElementsCode.controls.uischema}\n              />\n            )\n          }}\n          schema={UiSchemaElementsCode.controls.schema}\n          uischema={UiSchemaElementsCode.controls.uischema}\n        />\n      </Provider>\n\n      <p>\n        JSON Forms ships with a default renderer set which consists of renderers for all primitive types as well as\n        for arrays. Furthermore JSON Forms allows controls to be replaced or new controls to be added for newly\n        invented UI Schema Elements. For documentation on these so called <em>Custom Renderers</em> please see the section\n        about <RadiumLink to={'/docs/custom-renderers'} className={classes.link}>Custom renderers</RadiumLink>.\n      </p>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Controls);\n","export default {\n  data: { foo: 'green is my favorite color' },\n  schema: {\n    properties: {\n      foo: { type: \"string\" },\n      bar: { type: \"string\" }\n    }\n  },\n  verticalLayout: {\n    type: \"VerticalLayout\",\n    elements: [\n      {\n        type: \"Control\",\n        scope: \"#/properties/foo\"\n      },\n      {\n        type: \"Control\",\n        scope: \"#/properties/bar\"\n      }\n    ]\n  },\n  group: {\n    type: 'Group',\n    label: 'Stuff I like',\n    elements: [\n      {\n        type: \"Control\",\n        scope: \"#/properties/foo\"\n      },\n      {\n        type: \"Control\",\n        scope: \"#/properties/bar\"\n      }\n    ]\n  },\n  horizontalLayout: {\n    type: \"HorizontalLayout\",\n    elements: [\n      {\n        type: \"Control\",\n        scope: \"#/properties/foo\"\n      },\n      {\n        type: \"Control\",\n        scope: \"#/properties/bar\"\n      }\n    ]\n  },\n  categorization: {\n    type: \"Categorization\",\n    elements: [\n      {\n        type: \"Category\",\n        label: \"Personal Data\",\n        elements: [\n          {\n            type: \"Control\",\n            scope: \"#/properties/firstName\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/lastName\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/age\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/height\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/dateOfBirth\"\n          }\n        ]\n      },\n      {\n        type: \"Category\",\n        label: \"Dietary requirements\",\n        elements: [\n          {\n            type: \"Control\",\n            scope: \"#/properties/diet\"\n          },\n          {\n            type: \"Control\",\n            scope: \"allergicToPeanuts\"\n          }\n        ]\n      }\n    ]\n  }\n}","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport { HashLink } from 'react-router-hash-link'\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { layout } from '@jsonforms/examples';\nimport Radium from 'radium';\nimport layouts from './listings/layouts'\nimport { MarkdownElement, commonStyles, PropHeader, ApiLink } from '../../common';\n\nconst styles = () => ({\n  code: commonStyles.code,\n  display1: commonStyles.display1,\n  link: commonStyles.link,\n  caption: commonStyles.caption,\n  headline: commonStyles.headline,\n  title: commonStyles.headline,\n});\n\nconst RadiumLink = Radium(Link);\nconst RadiumHashLink = Radium(HashLink);\n\nconst Layouts = ({ classes }) => (\n  <div>\n    <Typography\n      variant='display1'\n      className={classes.display1}\n    >\n      Layouts\n    </Typography>\n    <p>\n      <a href=\"/api/core/interfaces/layout.html\" className={classes.link}>Layout</a> elements\n      in the UI Schema contain other UI Schema elements\n      like <RadiumLink to='/docs/uischema/controls' className={classes.link}>Controls</RadiumLink> or other layouts\n      and serve the purpose of defining the layout of those, e.g. a layout could arrange all its contained\n      UI Schema Elements into a horizontal alignment.\n    </p>\n\n    <PropHeader title='elements' type='UISchemaElement[]' link={'/api/core/interfaces/uischemaelement.html'}/>\n    <p>\n      All layouts need to declare an <code>elements</code> property which contains the children which are\n      to be arranged by the layout. It is expected to be an array of UI Schema elements, e.g. controls\n      or other layouts.\n    </p>\n\n    <PropHeader title='type' type='string'/>\n    By default, JSON Forms supports four different kinds of layouts: <code>VerticalLayout</code>&nbsp;\n    and <code>HorizontalLayout</code>, a slightly modified version of the vertical layout called <code>Group</code>,\n    as well <code>Categorization</code>, which is often used to bundle related data, for instance by means of Tabs.\n    Those four core layouts are detailed in the following.\n\n    {/* HORIZONTAL LAYOUT */}\n    <Typography variant='title' className={classes.title}>\n      Horizontal Layout (<RadiumHashLink to={'/examples/layouts#horizontal-layout'} className={classes.link}>Demo</RadiumHashLink>)\n    </Typography>\n    <p>\n      A <ApiLink link={'/api/core/interfaces/horizontallayout.html'}>Horizontal Layout</ApiLink> uses\n      the <code>HorizontalLayout</code> type and arranges its contained <code>elements</code> in a\n      horizontal fashion. Each child occupies the same amount of space, i.e. for n children a child occupies 1/n space.\n    </p>\n    <MarkdownElement\n      dir=\"ltr\"\n      className={classes.code}\n      text={`\\`\\`\\`json\\n${JSON.stringify(layout.uischemaHorizontal, null, 2)}\\n\\`\\`\\``}\n    />\n    <Typography\n      variant={'caption'}\n      className={classes.caption}\n    >\n      Example of a Horizontal Layout UI schema placing two controls side-by-side\n    </Typography>\n\n    {/* VERTICAL LAYOUT */}\n    <Typography\n      variant='title'\n      className={classes.title}\n      id='vertical-layout'\n    >\n      Vertical Layout (<RadiumHashLink to={'/examples/layouts#vertical-layout'} className={classes.link}>Demo</RadiumHashLink>)\n    </Typography>\n    <p>\n      A <ApiLink link='/api/core/interfaces/verticallayout.html'>Vertical Layout</ApiLink> uses the <code>VerticalLayout</code> type and arranges its <code>elements</code> in a\n      vertical fashion, i.e. all elements are placed beneath each other.\n    </p>\n\n    <MarkdownElement\n      dir=\"ltr\"\n      className={classes.code}\n      text={`\\`\\`\\`json\\n${JSON.stringify(layout.uischemaVertical, null, 2)}\\n\\`\\`\\``}\n    />\n    <Typography\n      variant={'caption'}\n      className={classes.caption}\n    >\n      Example of a Vertical Layout placing two controls vertically\n    </Typography>\n\n    {/* GROUP */}\n    <Typography variant='title' className={classes.title}>\n      Group (<RadiumHashLink to={'/examples/layouts#group-layout'} className={classes.link}>Demo</RadiumHashLink>)\n    </Typography>\n    <p>\n      A <ApiLink link='/api/core/interfaces/grouplayout.html'>Group</ApiLink> is very similar to\n      a <code>VerticalLayout</code> but features an additional mandatory <code>label</code> property\n      that is used to describe the <code>elements</code>.\n    </p>\n    <PropHeader title='label' type='string'/>\n    <p>\n      The label property defines an additional string that is ought to describe the <code>elements</code> of\n      the <code>Group</code>.\n    </p>\n\n    <MarkdownElement\n      dir=\"ltr\"\n      className={classes.code}\n      text={`\\`\\`\\`json\\n${JSON.stringify(layout.uischemaGroup, null, 2)}\\n\\`\\`\\``}\n    />\n\n    {/* CATEGORIZATION */}\n    <Typography variant='headline'>\n      Categorization\n    </Typography>\n    <p>\n      A <ApiLink link='/api/core/interfaces/categorization.html'>Categorization</ApiLink> layout uses\n      the <code>Categorization</code> type and can only contain <code>elements</code> of\n      type <code>Category</code>. A <code>Category</code> itself acts as a container and has\n      an <code>elements</code> of its own as well as a <code>label</code> that describes the contained data.\n      Categorizations are typically used to structure controls with related data, e.g. 'Personal Data'\n      and 'Dietary requirements' as demonstrated in example below.\n    </p>\n\n    <MarkdownElement\n      dir=\"ltr\"\n      className={classes.code}\n      text={`\\`\\`\\`json\\n${JSON.stringify(layouts.categorization, null, 2)}\\n\\`\\`\\``}\n    />\n\n    <p>\n      In the example above note how each child within the <code>elements</code> is of type <code>Category</code>.\n    </p>\n  </div>\n);\n\nexport default withStyles(styles)(Layouts);\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Radium from 'radium';\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport commonStyles from \"../../common/styles\";\nimport PropHeader from \"../../common/PropHeader\";\nimport ApiLink from \"../../common/ApiLink\";\n/* eslint import/no-webpack-loader-syntax: off */\nconst rule = require('!raw-loader!./listings/rule.md');\n\nconst styles = () => ({\n  code: commonStyles.code,\n  display1: commonStyles.display1,\n  headline: commonStyles.headline,\n  link: commonStyles.link,\n  caption: commonStyles.caption,\n  ul: {\n    listStyleType: 'square',\n    paddingLeft: '1em'\n  },\n});\n\nconst RadiumLink = Radium(Link);\n\nconst Rules = ({ classes }) => {\n  return (\n    <div>\n      <Typography\n        variant='display1'\n        className={classes.display1}\n      >\n        Rules (<RadiumLink to='/examples/rule' className={classes.link}>Demo</RadiumLink>)\n      </Typography>\n      <p>\n        <ApiLink link='/api/core/interfaces/rule.html'>Rules</ApiLink> allow for dynamic aspects for a form,\n        e.g. by hiding or disabling UI schema elements.\n        A rule may be attached to any UI schema element and can be defined with the <code>rule</code> property.\n        We'll first look at an example definition of a rule and then explain it in detail.\n      </p>\n\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`json\\n${rule}\\n\\`\\`\\``}\n      />\n      <Typography variant={'caption'} className={classes.caption}>\n        A basic rule definition\n      </Typography>\n\n      <p>\n        A rule basically works by first evaluating the <code>condition</code> property and in case it evaluates\n        to true, executing the associated <code>effect</code>.\n      </p>\n\n      <PropHeader title='effect' type='RuleEffect' link='/api/core/enums/ruleeffect.html'/>\n      <p>\n        The <code>effect</code> property determines what should happen to the attached UI schema element once\n        the <code>condition</code> is met. In the example above, if the <code>name</code> property has the value\n        of <code>foo</code>, we'll hide the UI schema element the rule is attached to.\n        Current effects include:\n      </p>\n      <ul className={classes.ul}>\n        <li><code>HIDE</code>: hide the UI schema element</li>\n        <li><code>SHOW</code>: show the UI schema element</li>\n        <li><code>DISABLE</code>: disable the UI schema element</li>\n        <li><code>ENABLE</code>: enable the UI schema element</li>\n      </ul>\n\n      <PropHeader title='condition' type='Condition' link='/api/core/interfaces/condition.html'/>\n      <p>\n        The <code>condition</code> property describes what value should be observed and validates that value with\n        against the JSON schema that is specified with `schema`. If validation succeeds the condition is fulfilled\n        and the associated <code>effect</code> will be triggered.\n      </p>\n      <p>\n        <strong>NOTE</strong>: These so-called <code>SchemaBasedCondition</code>s have been introduced with version\n        2.0.6 and have become the new default. The previous format via <code>type</code> and <code>expectedValue</code> properties\n        is still supported for the time being.\n      </p>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Rules);\n","import * as _ from 'lodash';\n\nexport const schema = {\n  type: \"object\",\n  properties: {\n    person: {\n      title: \"Person\",\n      type: \"object\",\n      properties: {\n        firstName: {\n          type: \"string\"\n        },\n        lastName: {\n          type: \"string\"\n        },\n        age: {\n          description: \"Age in years\",\n          type: \"integer\",\n          minimum: 0\n        },\n        shippingAddress: {\n          $ref: \"#/properties/address/properties/addressId\"\n        }\n      },\n      required: [\"firstName\", \"lastName\"]\n    },\n    address: {\n      title: \"Order\",\n      type: \"object\",\n      properties: {\n        addressId: {\n          type: \"string\",\n          label: \"Address Type\",\n          enum: [\n            \"Home Address 1\",\n            \"Home Address 2\",\n            \"Workplace\",\n          ]\n        },\n        street: {\n          type: \"string\",\n        },\n        city: {\n          type: \"string\"\n        },\n        zipCode: {\n          type: \"string\"\n        }\n      }\n    }\n  }\n};\n\nexport const uischema = {\n  type: \"VerticalLayout\",\n  elements: [\n    {\n      type: \"Group\",\n      label: \"Person\",\n      elements: [\n        {\n          type: \"HorizontalLayout\",\n          elements: [\n            {\n              type: \"Control\",\n              scope: \"#/properties/person/properties/firstName\"\n            },\n            {\n              type: \"Control\",\n              scope: \"#/properties/person/properties/lastName\"\n            },\n            {\n              type: \"Control\",\n              scope: \"#/properties/person/properties/age\"\n            },\n            {\n              type: \"Control\",\n              label: \"Address\",\n              scope: \"#/properties/person/properties/shippingAddress\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      type: \"Group\",\n      label: \"Address\",\n      elements: [\n        {\n          type: \"HorizontalLayout\",\n          elements: [\n            {\n              type: \"Control\",\n              scope: \"#/properties/person/properties/shippingAddress\"\n            },\n            {\n              type: \"Control\",\n              scope: \"#/properties/address/properties/street\"\n            },\n            {\n              type: \"Control\",\n              scope: \"#/properties/address/properties/city\"\n            },\n            {\n              type: \"Control\",\n              scope: \"#/properties/address/properties/zipCode\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\n\nconst clonedPersonSchema = _.cloneDeep(schema.properties.person);\nclonedPersonSchema.properties.shippingAddress = { type: \"string\" };\n\nexport const schemas = {\n  person: clonedPersonSchema,\n  address: schema.properties.address\n};\n\nexport const uischemas = {\n  person: {\n    type: \"Group\",\n    label: \"Person\",\n    elements: [\n      {\n        type: \"HorizontalLayout\",\n        elements: [\n          {\n            type: \"Control\",\n            scope: \"#/properties/firstName\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/lastName\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/age\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/shippingAddress\"\n          }\n        ]\n      }\n    ]\n  },\n  address: {\n    type: \"Group\",\n    label: \"Address\",\n    elements: [\n      {\n        type: \"HorizontalLayout\",\n        elements: [\n          {\n            type: \"Control\",\n            scope: \"#/properties/addressId\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/street\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/city\"\n          },\n          {\n            type: \"Control\",\n            scope: \"#/properties/zipCode\"\n          }\n        ]\n      }\n    ]\n  }\n};\n","import React from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport { jsonformsReducer } from '@jsonforms/core';\nimport {\n  materialFields,\n  materialRenderers,\n  materialCategorizationTester,\n  MaterialCategorizationLayout\n} from '@jsonforms/material-renderers';\nimport commonStyles from \"../../common/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport PropHeader from \"../../common/PropHeader\";\nimport {RadiumLink} from \"../../common\";\nimport ApiLink from \"../../common/ApiLink\";\nimport { schemas, uischemas, schema, uischema } from './listings/store';\nimport {Provider} from \"react-redux\";\nimport Demo from \"../../common/Demo\";\nimport {combineReducers, createStore} from \"redux\";\n/* eslint import/no-webpack-loader-syntax: off */\nconst jsonFormsState = require('!raw-loader!./listings/jsonFormsState.md');\nconst validationState = require('!raw-loader!./listings/validationState.md');\nconst multipleForms = require('!raw-loader!./listings/multipleForms.md');\n\nconst styles = () => ({\n  link: commonStyles.link,\n  code: commonStyles.code,\n  display1: commonStyles.display1,\n  headline: commonStyles.headline,\n  list: commonStyles.list\n});\n\nconst store = createStore(\n  combineReducers({ jsonforms: jsonformsReducer() }),\n  {\n    jsonforms: {\n      renderers: materialRenderers\n        .concat([{ tester: materialCategorizationTester, renderer: MaterialCategorizationLayout}]),\n      fields: materialFields,\n    }\n  }\n);\n\nconst linkedFormsStore = createStore(\n  combineReducers({ jsonforms: jsonformsReducer() }),\n  {\n    jsonforms: {\n      renderers: materialRenderers\n        .concat([{ tester: materialCategorizationTester, renderer: MaterialCategorizationLayout}]),\n      fields: materialFields,\n    }\n  }\n);\n\nconst Store = ({ classes }) => (\n  <div>\n    <Typography variant='display1' className={classes.display1}>\n      Store setup\n    </Typography>\n    <p>\n      JSON Forms makes use of redux to maintain its internal state. This section describes\n      the state managed by the JSON Forms reducer.\n    </p>\n    <Typography variant='headline' className={classes.headline}>\n      Basic structure\n    </Typography>\n    JSON Forms exports its reducer via\n    the <ApiLink link='/api/core/globals.html#jsonformsreducer'>jsonformsReducer</ApiLink> function.\n    It's expected that you add this reducer to your application via <code>combineReducers</code> under the\n    <code>jsonforms</code> key. The basic structure of the JSON Forms state looks like this:\n    <MarkdownElement\n      dir=\"ltr\"\n      className={classes.code}\n      text={`\\`\\`\\`js\\n${jsonFormsState}\\n\\`\\`\\``}\n    />\n\n    <p>\n      Let's inspect each of these state properties:\n    </p>\n    <ul className={classes.list}>\n      <li>\n        <PropHeader title='core'/>\n        The core substate stores the <code>data</code>, which represents the data\n        to be rendered, the <code>schema</code> which describes the structure of the <code>data</code> and\n        the <code>uischema</code>, which describes how to render the <code>data</code>.\n\n        The <code>validation</code> substate stores any validation errors the <code>data</code> currently has with\n        respect to the <code>schema</code>. It's shape is defined as:\n\n        <MarkdownElement\n          dir=\"ltr\"\n          className={classes.code}\n          text={`\\`\\`\\`js\\n${validationState}\\n\\`\\`\\``}\n        />\n        The <code>errors</code> property stores the current errors. Under the hood, JSON Forms\n        uses <a href=\"https://github.com/epoberezkin/ajv\" className={classes.link}>ajv</a> to validate the\n        data against the schema, hence the <code>ValidationFunction</code> and <code>ErrorObject</code> types are from ajv.\n      </li>\n      <li>\n        <PropHeader title='renderers'/>\n        The <code>renderers</code> property stores all available renderers that are used by JSON Forms when rendering.\n        If you want to know more about renderers, see\n        the section on <RadiumLink to='/docs/custom-renderers' className={classes.link}>Custom Renderers</RadiumLink>.\n      </li>\n      <li>\n        <PropHeader title='fields'/>\n        Fields are like renderers but only represent the data to be displayed and nothing else. This is not necessarily\n        the case with Renderers stored within <code>renderers</code>, as such renderers may also display a label\n        or any validation errors. Fields are more universal in that sense that they should not make any assumptions\n        about the environment they are embedded in, e.g. a field may either be used by a regular control or by a table,\n        where it is used within a call. Most controls for primitive datatypes in the default renderer sets of JSON Forms\n        are implemented with fields.\n      </li>\n    </ul>\n\n    <p>\n      If you contribute custom renderers/fields, some of them might need to some additional state not covered by\n      JSON Forms. For that purpose the <code>JsonFormsState</code> allows any additional state to be passed in\n      via an index property.\n    </p>\n\n    <Typography variant='headline' className={classes.headline}>\n      Available actions\n    </Typography>\n    <p>\n      JSON Forms provides a couple of action to interact with the store, which we describe here. All\n      actions might either be imported directly or via the <code>Actions</code> utility.\n    </p>\n    <PropHeader title={'init'}/>\n    <p>\n      The <code>INIT</code> action expects the data, schema and uischema and initializes the store accordingly.\n      Currently, this action <strong>must</strong> be called in order for JSON Forms to work properly.\n    </p>\n\n    <PropHeader title='update'/>\n    <p>\n      The <code>update</code> is action is used to update the <code>data</code> substate within the store. It expects two\n      arguments: a dot-separated path describing which part of the data should be updated as well as a function that\n      returns the value that should be used. The function gets passed the current value that might be used to calculate\n      the updated value.\n      &nbsp;<ApiLink link='/api/core/globals.html#mapdispatchtocontrolprops'>mapDispatchToControlProps</ApiLink> and\n      &nbsp;<ApiLink link='/api/core/globals.html#mapdispatchtofieldprops'>mapDispatchToFieldProps</ApiLink>&nbsp;\n      provide a helper function called <code>handleChange</code> which already dispatches the <code>update</code> action,\n      so that you rarely need to interact with <code>update</code> itself, if at all.\n    </p>\n\n    <PropHeader title='registerRenderer/unregisterRenderer'/>\n    <p>\n      These actions allow to register or unregister renderers, respectively. The <code>registerRenderer</code> expects\n      two arguments, the 1st being a tester and the 2nd the actual renderer. Please see the section\n      about <RadiumLink to='/docs/custom-renderers' className={classes.link}>Custom Renderers</RadiumLink> for an example\n      how to use these.\n    </p>\n\n    <PropHeader title='registerUISchema/unregisterUISchema'/>\n    <p>\n      These actions allow to register or unregister UISchemas, respectively. The <code>registerUISchema</code> expects\n      two arguments, the 1st being a tester and the 2nd the actual UISchemaElement. Please see the section\n      about <RadiumLink to='/docs/providing-uischemas' className={classes.link}>Providing UISchemas</RadiumLink> for an example\n      how to reference additional uischemas from the registry.\n    </p>\n\n    <Typography variant='headline' className={classes.headline}>\n      Linking forms\n    </Typography>\n    Forms can interact with each other by using $ref and setting the <code>scope</code> property within the UI schema\n    accordingly. In this example, we have two entities, Person and Address. Whenever we change\n    the <code>shippingAddress</code> property of the person, it is accordingly updated in the address form and vice versa.\n    <Provider store={linkedFormsStore}>\n      <Demo\n        js={() => (\n          <JsonForms schema={schema}\n                     uischema={uischema}\n          />\n        )}\n        schema={schema}\n        uischema={uischema}\n      />\n    </Provider>\n\n    <Typography variant='headline' className={classes.headline}>\n        Multiple forms within single store\n    </Typography>\n    There might be use cases where you have forms that do not have anything in common. In such cases\n    you can explicitly pass  <code>schema</code> and <code>uischema</code> props to the <code>JsonForms</code> component\n    (if you don't specify these, they will be fetched from the store).\n\n    Additionally, the <code>JsonForms</code> component also takes a <code>path</code> prop which specifies\n    the instance path that is used to bind against the data.\n\n    To illustrate, let's look again at the example from before, but this time\n    the <code>person</code> and <code>address</code> schemas are not stored in any common parent schema.\n\n    <Provider store={store}>\n      <Demo\n        js={() => (\n          <div>\n            <JsonForms schema={schemas.person}\n                       uischema={uischemas.person}\n                       path='person'\n            />\n            <JsonForms schema={schemas.address}\n                       uischema={uischemas.address}\n                       path='shippingAddress'\n            />\n          </div>\n        )}\n        schema={schemas}\n        uischema={uischemas}\n      />\n    </Provider>\n\n    The code for the above example looks as follows:\n\n    <MarkdownElement\n      dir=\"ltr\"\n      className={classes.code}\n      text={`\\`\\`\\`jsx\\n${multipleForms}\\n\\`\\`\\``}\n    />\n\n    As you can see we explicitly pass in the <code>schema</code> and <code>uischema</code> props.\n    We also need to specify which property the data should be written to, in this case we\n    use <code>person</code> and <code>shippingAddress</code>.\n  </div>\n);\n\nexport default withStyles(styles)(Store);","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Provider } from 'react-redux';\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport commonStyles from \"../../common/styles\";\nimport { person } from '@jsonforms/examples';\nimport Demo from \"../../common/Demo\";\nimport {createJsonFormsStore} from \"../../common/store\";\n/* eslint import/no-webpack-loader-syntax: off */\nconst init = require('!raw-loader!./listings/init.md');\nconst installation = require('!raw-loader!./listings/installation.md');\nconst setupStore = require('!raw-loader!./listings/setupStore.md');\nconst render = require('!raw-loader!./listings/render.md');\nconst initAction = require('!raw-loader!./listings/initAction.md');\nconst imports = require('!raw-loader!./listings/imports.md');\nconst variables = require('!raw-loader!./listings/variables.md');\n\nconst styles = () => ({\n  link: commonStyles.link,\n  list: commonStyles.list,\n  code: commonStyles.code,\n  display1: commonStyles.display1,\n});\n\nconst store = createJsonFormsStore({\n  data: person.data,\n  schema: person.personCoreSchema,\n  uischema: person.uischema\n});\n\nconst Tutorial = ({ classes }) => {\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Tutorial\n      </Typography>\n      <p>\n        This section describes you to integrate JSON Forms into a React app from scratch.\n        Alternatively you can also clone\n        the <a href=\"https://github.com/eclipsesource/jsonforms-react-seed\" className={classes.link}>seed app</a>.\n      </p>\n\n      <ol className={classes.list}>\n\n        <li>\n          We'll use <a href=\"https://github.com/facebookincubator/create-react-app\" className={classes.link}>create-react-app</a> to scaffold a basic React application which we'll use as a\n          starting point.\n          If you didn't install create-react-app yet, please do so now before continuing.\n\n          Let's now create a basic application with:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`bash\\ncreate-react-app my-jsonforms-app\\n\\`\\`\\``}\n          />\n          Scaffolding may take a couple of moments. Once it's finished, switch to your newly created app and\n          install all dependencies:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`bash\\ncd my-jsonforms-app\\nnpm install\\n\\`\\`\\``}\n          />\n        </li>\n\n        <li>\n          Install JSON Forms and the material renderer set. We'll use an example from JSON Forms in order to obtain a JSON schema,\n          a corresponding UI schema and a data instance to be rendered. You don't need to install\n          the <code>@jsonforms/examples</code> module if you plan to supply your own schema in the following:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`bash\\n${installation}\\n\\`\\`\\``}\n          />\n        </li>\n\n        <li>\n          Switch to the <code>src</code> directory and open <code>index.js</code> with an editor of your choice.\n          Let's add a couple of imports first:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`js\\n${imports}\\n\\`\\`\\``}\n          />\n\n          The <code>person</code> import is necessary for importing the person example\n          while <code>@jsonforms/material-renderers</code> imports\n          the <a href=\"http://http://material-ui-next.com/\" className={classes.link}>Material UI</a> based\n          renderer set. The other ones will be explained shortly.\n\n          Now let's define the variables that are crucial for JSON Forms to work,\n          that is, <code>data</code>, <code>schema</code> and <code>uischema</code>. As previously mention, we are using\n          the person example from JSON Forms here:\n\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`js\\n${variables}\\n\\`\\`\\``}\n          />\n\n          These variables are defined as follows, in case you are interested (hit the buttons in the upper right corner\n          of the box to switch through the listings):\n\n          <Provider store={store}>\n            <Demo\n              schema={person.schema}\n              uischema={person.uischema}\n              data={person.data}\n            />\n          </Provider>\n        </li>\n\n        <li>\n          Still in <code>index.js</code>, create a new store with the <code>createStore</code> function provided by redux.\n          For that purpose JSON Forms exports its reducer via <code>jsonformsReducer</code>. For the initial state we supply\n          the renderers we want to use, which we have imported from <code>@jsonforms/material-renderers</code>:\n\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`js\\n${setupStore}\\n\\`\\`\\``}\n          />\n\n          In order for JSON Forms to initialize correctly, we also need to dispatch an initialization action that will\n          set-up some internal state that's necessary for JSON Forms:\n\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`js\\n${initAction}\\n\\`\\`\\``}\n          />\n        </li>\n        <li>\n          Wrap the existing <code>App</code> component within a <code>Provider</code>\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`jsx\\n${init}\\n\\`\\`\\``}\n          />\n          You can close the <code>index.js</code> file now.\n        </li>\n\n        <li>\n          Open the <code>App.js</code> file and\n          import the <code>JsonForms</code> component from <code>@jsonforms/react</code>.\n          Delete the `header` element and replace it with the <code>JsonForms</code> element\n          to get a form rendered:\n          <MarkdownElement\n            dir=\"ltr\"\n            className={classes.code}\n            text={`\\`\\`\\`jsx\\n${render}\\n\\`\\`\\``}\n          />\n        </li>\n      </ol>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Tutorial);","import React from 'react';\nimport ApiLink from \"../../common/ApiLink\";\nimport commonStyles from \"../../common/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Warning from \"../../common/Warning\";\n\nconst styles = () => ({\n  display1: commonStyles.display1,\n  list: {\n    ...commonStyles.list,\n    listStyle: 'none'\n  }\n});\n\nconst APIs = ({ classes }) => (\n  <div>\n    <Typography variant='display1' className={classes.display1}>\n      API Documentation\n    </Typography>\n    <Warning>\n      <strong>ATTENTION</strong>: Please note that we do not yet follow SemVer conventions yet as the the API of the\n      WIP renderer sets is not considered stable yet. We'll switch versioning schemes starting with <strong>3.x.x</strong>.\n    </Warning>\n    <p>\n      This section provides links to the API documentation of all available JSON Forms modules.\n    </p>\n    <ul className={classes.list}>\n      <li>\n        <ApiLink link={'/api/core/'}>Core</ApiLink>\n      </li>\n      <li>\n        <ApiLink link={'/api/react/'}>React integration</ApiLink>\n      </li>\n      <li>\n        <ApiLink link={'/api/material/'}>React-based Material renderers</ApiLink>\n      </li>\n      <li>\n        <ApiLink link={'/api/vanilla/'}>React-based vanilla renderers (WIP)</ApiLink>\n      </li>\n      <li>\n        <ApiLink link={'/api/material-tree-renderer/'}>React-based Material tree renderer (WIP)</ApiLink>\n      </li>\n      <li>\n        <ApiLink link={'/api/angular-material/'}>Angular-based Material renderers</ApiLink>\n      </li>\n      <li>\n        <ApiLink link={'/api/ionic/'}>Angular-based Ionic renderers (WIP)</ApiLink>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default withStyles(styles)(APIs);","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport commonStyles from '../../common/styles';\n/* eslint import/no-webpack-loader-syntax: off */\nconst registerUISchemaCode = require('!raw-loader!./listings/registerUISchema.md');\nconst retrieveUISchemaCode = require('!raw-loader!./listings/retrieveUISchema.md');\n\n\nconst styles = theme => ({\n  code: commonStyles.code(theme),\n  headline: commonStyles.headline,\n  title: {\n    marginTop: '0.5em'\n  },\n  display1: commonStyles.display1,\n  list: commonStyles.list,\n  link: commonStyles.link\n});\n\nexport const ProvidingUISchemas = ({ classes }) => {\n\n  return (\n    <div>\n      <Typography variant={'display1'} className={classes.display1}>Providing UISchemas</Typography>\n\n      <p>\n        When initializing JSON Forms you have to provide a UISchema. In many cases this is already enough as it covers most use cases.\n        But in some cases, especially when rendering (nested) arrays, you have to provide a UISchema which can be retrieved.\n        This allows subsequent renderers to use a different UI Schema than the the one specified initially.\n      </p>\n\n      <Typography variant={'title'} className={classes.title}>\n        Registering an UISchema\n      </Typography>\n      <p>The registration of an UISchema looks as follows:</p>\n\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n${registerUISchemaCode}\\n\\`\\`\\``}\n      />\n\n      <Typography variant='title' className={classes.title}>\n        Retrieving a registered UISchema\n      </Typography>\n      <p>\n        To retrieve the registered UISchema you can call the 'findUISchema' function which is provided through the properties.\n        This function needs the schema, the schemaPath and a subpath. All those parameters are also passed through the properties.\n        The usage is shown using a renderer.\n      </p>\n\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n${retrieveUISchemaCode}\\n\\`\\`\\``}\n      />\n\n      <p style={{\n        backgroundColor: '#d1d1d1',\n        padding: '0.5em',\n        borderRadius: '0.5em',\n        marginTop: '0.5em',\n        marginBottom: '0.5em'\n      }}>\n        <strong>NOTE</strong>: We are working on the sections. Expect this page to be updated soon!\n      </p>\n    </div>\n\n);\n};\n\nexport default withStyles(styles)(ProvidingUISchemas);\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MarkdownElement from \"../../common/MarkdownElement\";\nimport commonStyles from \"../../common/styles\";\n\nconst styles = () => ({\n  link: commonStyles.link,\n  list: commonStyles.list,\n  code: commonStyles.code,\n  display1: commonStyles.display1,\n});\n\nconst RendererSets = ({ classes }) => {\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Renderer Sets\n      </Typography>\n      <p>\n        This section describes the two renderer sets which are available for react and some specifica about them.\n      </p>\n      <Typography variant='title' className={classes.title}>\n        Material Renderer Set\n      </Typography>\n      <p>\n        The Material Renderer Set is based on <a href=\"https://material-ui.com/\"className={classes.link}>Material UI</a>.\n        So if you want to implement your own renderers and use them with the Material Renderer Set we recommend to use Material UI.\n      </p>\n      <Typography variant='title' className={classes.title}>\n        Vanilla Renderer Set\n      </Typography>\n      <p>\n        The Vanilla Renderer Set is based on plain HTML with a set of custom styles.\n      </p>\n      <Typography variant='headline' className={classes.headline}>\n        Styling / Customization\n      </Typography>\n      <p>\n        You can define the classes to be set by providing styles to the store:\n      </p>\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n\n          ...\n          import { combineReducers, createStore } from 'redux';\n          import { jsonformsReducer } from '@jsonforms/core';\n          import { stylingReducer, vanillaFields, vanillaRenderers, vanillaStyles } from '@jsonforms/vanilla-renderers';\n\n          const store = createStore(\n            combineReducers({ jsonforms: jsonformsReducer({ styles: stylingReducer }) }),\n            {\n              jsonforms: {\n                fields: vanillaFields,\n                renderers: vanillaRenderers,\n                styles: vanillaStyles,\n              },\n            }\n          );\n          ...\n          \\n\\`\\`\\``}\n      />\n      <p>\n        The styles are simple objects with a ;<code>name</code> and an array of <code>classNames</code> to apply. You can also provide a function as <code>classNames</code> which allows you to return dynamic classNames.<br/>\n        Here is an example:\n      </p>\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n\n          export const vanillaStyles = [\n            {\n              name: 'horizontal.layout',\n              classNames: ['horizontal-layout']\n            },\n            {\n              name: 'horizontal.layout.item',\n              classNames: numberOfChildren => ['horizontal-layout' + numberOfChildren[0]]\n            }\n          ];\n          \\n\\`\\`\\``}\n      />\n      <p>\n        Inside a renderer you can retrieve the styling using <code>getStyleAsClassName</code> and <code>getStyle</code>.\n        The difference is that <code>getStyleAsClassName</code> returns a string where as <code>getStyle</code> returns an array of strings.\n        <br/>\n        Here is an example:\n      </p>\n      <MarkdownElement\n        dir=\"ltr\"\n        className={classes.code}\n        text={`\\`\\`\\`jsx\\n\n          ...\n          const HorizontalLayoutRenderer = (props: VanillaLayoutProps) => {\n            const {uischema, getStyle, getStyleAsClassName} = props;\n          \n            const horizontalLayout = uischema as HorizontalLayout;\n            const elementsSize = horizontalLayout.elements ? horizontalLayout.elements.length : 0;\n            const layoutClassName = getStyleAsClassName('horizontal.layout');\n            const childClassNames = getStyle('horizontal.layout.item', elementsSize).join(' ');\n            ...\n          };\n          ...\n          \\n\\`\\`\\``}\n      />\n      <p>\n        You can find all predefined style constants in <a href=\"https://github.com/eclipsesource/jsonforms/blob/master/packages/vanilla/Styles.md\" className={classes.link}>this list</a>.\n      </p>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(RendererSets);","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Intro from \"./Intro\";\nimport GettingStarted from \"./GettingStarted\";\nimport CustomRenderers from './CustomRenderers';\nimport UISchemaElements from \"./UISchemaElements\";\nimport Controls from \"./Controls\";\nimport Layouts from \"./Layouts\";\nimport { commonStyles } from \"../../common\";\nimport Links from '../../common/Links'\nimport Rules from \"./Rules\";\nimport Store from \"./Store\";\nimport Tutorial from \"./Tutorial\";\nimport APIs from \"./APIs\";\nimport ProvidingUISchemas from './ProvidingUISchemas';\nimport RendererSets from './RendererSets';\n\nconst styles = () => ({\n  grid: commonStyles.grid,\n  currentRoute: {\n    fontWeight: 'bold'\n  },\n  sidebarLink: commonStyles.sidebarLink,\n  link: commonStyles.link,\n  mainSection: commonStyles.mainSection,\n  sidebar: commonStyles.sidebar,\n  sidebarLinks: commonStyles.sidebarLinks,\n  display1: commonStyles.display1\n});\n\nconst Docs = ({ classes, match, location }) => (\n  <Grid container\n        spacing={0}\n        className={classes.grid}\n        alignItems={'stretch'}\n  >\n    <Grid item xs={1}/>\n    <Grid item xs={6} className={classes.mainSection}>\n      <Switch>\n        <Route path={`${match.url}/intro`} component={Intro}/>\n        <Route path={`${match.url}/getting-started`} component={GettingStarted}/>\n        <Route path={`${match.url}/tutorial`} component={Tutorial}/>\n        <Route path={`${match.url}/uischema/controls`} component={Controls}/>\n        <Route path={`${match.url}/uischema/layouts`} component={Layouts}/>\n        <Route path={`${match.url}/uischema/rules`} component={Rules}/>\n        <Route path={`${match.url}/uischema`} component={UISchemaElements}/>\n        <Route path={`${match.url}/custom-renderers`} component={CustomRenderers}/>\n        <Route path={`${match.url}/providing-uischemas`} component={ProvidingUISchemas}/>\n        <Route path={`${match.url}/renderer-sets`} component={RendererSets}/>\n        <Route path={`${match.url}/store`} component={Store}/>\n        <Route path={`${match.url}/apis`} component={APIs}/>\n        <Route path={match.url} render={() => (\n          <div>\n            <Typography variant=\"display1\" className={classes.display1}>Documentation</Typography>\n            <p>\n              We provide articles on different aspects of JSON Forms -\n              from a basic introduction to implementing custom renderers.\n              This page lists important articles to get started below.\n              A list of all available articles is available to the right.\n            </p>\n          </div>\n        )}/>\n      </Switch>\n    </Grid>\n    <Grid item xs={2}/>\n    <Grid item xs={3} className={classes.sidebar}>\n      <ul className={classes.sidebarLinks}>\n        <Links\n          currentLocation={location.pathname}\n          classes={classes}\n          url={match.url}\n          routes={\n            [\n              {\n                slug: 'getting-started',\n                name: 'Getting started'\n              },\n              {\n                slug: 'intro',\n                name: 'What is JSON Forms?'\n              },\n              {\n                slug: 'tutorial',\n                name: 'Tutorial'\n              },\n              {\n                slug: 'uischema',\n                name: 'UI Schema Elements',\n                routes: [\n                  {\n                    slug: 'controls',\n                    name: 'Controls'\n                  },\n                  {\n                    slug: 'layouts',\n                    name: 'Layouts'\n                  },\n                  {\n                    slug: 'rules',\n                    name: 'Rules'\n                  },\n                ]\n              },\n              {\n                slug: 'custom-renderers',\n                name: 'Custom renderers'\n              },\n              {\n                slug: 'providing-uischemas',\n                name: 'Providing UISchemas'\n              },\n              {\n                slug: 'renderer-sets',\n                name: 'Renderer Sets'\n              },\n              {\n                slug: 'store',\n                name: 'Store'\n              },\n              {\n                slug: 'apis',\n                name: 'APIs'\n              }\n            ]\n          }\n        />\n      </ul>\n    </Grid>\n  </Grid>\n);\n\nexport default withStyles(styles)(Docs);\n","import React from 'react';\nimport { person } from '@jsonforms/examples';\nimport { JsonForms } from '@jsonforms/react';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport commonStyles from \"../../common/styles\";\nimport {createJsonFormsStore} from \"../../common/store\";\nimport Demo from \"../../common/Demo\";\n\nconst styles = () => ({\n  display1: commonStyles.display1\n});\n\nconst Person = ({ classes }) => {\n\n  const store = createJsonFormsStore({\n    data: person.data,\n    schema: person.schema,\n    uischema: person.uischema\n  });\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Person example\n      </Typography>\n      <Provider store={store}>\n        <Demo\n          js={() => <JsonForms/>}\n          schema={person.schema}\n          uischema={person.uischema}\n        />\n      </Provider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Person);","import React from 'react';\nimport { layout } from '@jsonforms/examples';\nimport { JsonForms } from '@jsonforms/react';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { commonStyles, Demo }from \"../../common\";\nimport {createJsonFormsStore} from \"../../common/store\";\n\nconst styles = () => ({\n  display1: commonStyles.display1,\n  headline: commonStyles.headline\n});\n\nconst verticalLayoutStore = createJsonFormsStore({\n  data: layout.data,\n  schema: layout.schema,\n  uischema: layout.uischemaVertical\n});\n\nconst groupStore = createJsonFormsStore({\n  data: layout.data,\n  schema: layout.schema,\n  uischema: layout.uischemaGroup,\n});\n\nconst horizontalStore = createJsonFormsStore({\n  data: layout.data,\n  schema: layout.schema,\n  uischema: layout.uischemaHorizontal,\n});\n\nconst complexStore = createJsonFormsStore({\n  data: layout.data,\n  schema: layout.schema,\n  uischema: layout.uischemaComplex,\n});\n\nconst Layouts = ({ classes }) => {\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Layouts\n      </Typography>\n      <p>\n        All layout examples use the same schema which is an <code>object</code> with\n        two <code>properties</code>, <code>name</code> and <code>birthDate</code>.\n      </p>\n\n      {/* HORIZONTAL LAYOUT */}\n      <Typography\n        variant={'headline'}\n        className={classes.headline}\n        id='horizontal-layout'\n      >\n        Horizontal Layout\n      </Typography>\n      <Provider store={horizontalStore}>\n        <Demo\n          js={() => <JsonForms/> }\n          uischema={layout.uischemaHorizontal}\n          schema={layout.schema}\n        />\n      </Provider>\n\n      {/* VERTICAL LAYOUT */}\n      <Typography\n        variant={'headline'}\n        className={classes.headline}\n        id='vertical-layout'\n      >\n        Vertical Layout\n      </Typography>\n      <Provider store={verticalLayoutStore}>\n        <Demo\n          js={() => <JsonForms/> }\n          uischema={layout.uischemaVertical}\n          schema={layout.schema}\n        />\n      </Provider>\n\n      {/* GROUP LAYOUT */}\n      <Typography\n        variant={'headline'}\n        className={classes.headline}\n        id='group-layout'\n      >\n        Group Layout\n      </Typography>\n      <p>\n        A <code>Group</code> is like a <code>VerticalLayout</code> but features an additional <code>label</code> property.\n        In this case it has been set to 'My Group'.\n      </p>\n      <Provider store={groupStore}>\n        <Demo\n          js={() => <JsonForms/> }\n          uischema={layout.uischemaGroup}\n          schema={layout.schema}\n        />\n      </Provider>\n\n      {/* NESTED LAYOUTS */}\n      <Typography\n        variant={'headline'}\n        className={classes.headline}\n      >\n        Nested Layouts\n      </Typography>\n      <p>\n        This example demonstrates how layouts can be nested in order to create more complex forms.\n        The top UI schema element is a <code>Group</code> which in turn contains a <code>HorizontalLayout</code>.\n        The <code>elements</code> of the <code>HorizontalLayout</code> then are again <code>VerticalLayout</code>.\n      </p>\n      <Provider store={complexStore}>\n        <Demo\n          js={() => <JsonForms/> }\n          uischema={layout.uischemaComplex}\n          schema={layout.schema}\n        />\n      </Provider>\n\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Layouts);","import React from 'react';\nimport { array } from '@jsonforms/examples';\nimport { JsonForms } from '@jsonforms/react';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport commonStyles from \"../../common/styles\";\nimport Demo from \"../../common/Demo\";\nimport { createJsonFormsStore } from \"../../common/store\";\n\nconst styles = () => ({\n  display1: commonStyles.display1\n});\n\nconst Array = ({ classes }) => {\n\n  const uischema = {\n    type: 'VerticalLayout',\n    elements: [\n      {\n        type: 'Control',\n        scope: '#/properties/comments'\n      }\n    ]\n  };\n  const store = createJsonFormsStore({\n    data: array.data,\n    schema: array.schema,\n    uischema\n  });\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Array Control\n      </Typography>\n      <Provider store={store}>\n        <Demo\n          schema={array.schema}\n          uischema={uischema}\n          js={() => (\n            <JsonForms />\n          )}\n        />\n      </Provider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Array);\n","import React from 'react';\nimport { categorization } from '@jsonforms/examples';\nimport { JsonForms } from '@jsonforms/react';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport commonStyles from \"../../common/styles\";\nimport Demo from \"../../common/Demo\";\nimport {createJsonFormsStore} from \"../../common/store\";\n\nconst styles = () => ({\n  display1: commonStyles.display1\n});\n\nconst CategorizationExample = ({ classes }) => {\n\n  const store = createJsonFormsStore({\n    data: {\n      name: 'Max Power',\n      vegetarian: true,\n      birthDate: '1956-05-12',\n      nationality: 'US'\n    },\n    schema: categorization.schema,\n    uischema: categorization.uischema\n  });\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Categorization Control\n      </Typography>\n      <Provider store={store}>\n        <Demo\n          schema={categorization.schema}\n          uischema={categorization.uischema}\n          js={() => (\n            <JsonForms />\n          )}\n        />\n      </Provider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CategorizationExample);\n","import React from 'react';\nimport { rule } from '@jsonforms/examples';\nimport { JsonForms } from '@jsonforms/react';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport commonStyles from \"../../common/styles\";\nimport Demo from \"../../common/Demo\";\nimport {RadiumHashLink} from \"../../common\";\nimport {createJsonFormsStore} from \"../../common/store\";\n\nconst styles = () => ({\n  display1: commonStyles.display1,\n  link: commonStyles.link\n});\n\nconst RuleExample = ({ classes }) => {\n\n  const store = createJsonFormsStore({\n    data: rule.data,\n    schema: rule.schema,\n    uischema: rule.uischema\n  });\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Rules\n      </Typography>\n\n      <p>\n        This example uses a <RadiumHashLink to={'/docs/uischema/rules'} className={classes.link}>Rule</RadiumHashLink> to\n        display an additional selection control if the 'Is Alive' checkbox is unchecked.\n        If is is checked the control will be hidden. Give it a try!\n      </p>\n\n      <Provider store={store}>\n        <Demo\n          schema={rule.schema}\n          uischema={rule.uischema}\n          js={() =>\n            <JsonForms />\n          }\n        />\n      </Provider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(RuleExample);","import React from 'react';\nimport { generateSchema } from '@jsonforms/examples';\nimport { JsonForms } from '@jsonforms/react';\nimport { generateDefaultUISchema, generateJsonSchema } from '@jsonforms/core';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { commonStyles, Demo } from \"../../common\";\nimport {createJsonFormsStore} from \"../../common/store\";\n\nconst styles = () => ({\n  display1: commonStyles.display1\n});\n\nconst GenerateSchemaExample = ({ classes }) => {\n\n  const schema = generateJsonSchema(generateSchema.data);\n  // TODO: this example shouldn't generate its UI schema\n  const uischema = generateDefaultUISchema(schema);\n\n  const store = createJsonFormsStore({\n    data: generateSchema.data,\n    schema,\n    uischema\n  });\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Inferring a JSON schema and a UI schema\n      </Typography>\n\n      <p>\n        This example demonstrates that JSON Forms is already able to render a form just by specifying\n        the data to be rendered. Both, the JSON schema as well as the UI schema have been omitted in this example\n        as you can see yourself if you check the provided schema and UI schema.\n      </p>\n      <p>\n        If no JSON schema is provided to JSON Forms it will generate one. In most uses cases this might not be the\n        thing you want, but it's a useful feature nevertheless, e.g. for rapid prototyping.\n      </p>\n\n      <Provider store={store}>\n        <Demo\n          schema={schema}\n          uischema={uischema}\n          js={() =>\n            <JsonForms />\n          }\n        />\n      </Provider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(GenerateSchemaExample);","import React from 'react';\nimport { generateUISchema } from '@jsonforms/examples';\nimport { JsonForms } from '@jsonforms/react';\nimport { generateDefaultUISchema, generateJsonSchema } from '@jsonforms/core';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { commonStyles, Demo, RadiumHashLink } from \"../../common\";\nimport {createJsonFormsStore} from \"../../common/store\";\n\nconst styles = () => ({\n  display1: commonStyles.display1,\n  link: commonStyles.link\n});\n\nconst GenerateUISchemaExample = ({ classes }) => {\n\n  const schema = generateJsonSchema(generateUISchema.data);\n  const uischema = generateDefaultUISchema(schema)\n\n  const store = createJsonFormsStore({\n    data: generateUISchema.data,\n    schema,\n    uischema,\n  });\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Inferring a UI schema\n      </Typography>\n\n      <p>\n        If you provide no UI schema to JSON Forms it'll generate one. The generated layout will be\n        a <RadiumHashLink to={'/docs/uischema/layouts#vertical-layout'} className={classes.link}>VerticalLayout</RadiumHashLink> containing\n        controls for the provided JSON schema.\n      </p>\n\n      <Provider store={store}>\n        <Demo\n          schema={schema}\n          uischema={uischema}\n          js={() =>\n            <JsonForms />\n          }\n        />\n      </Provider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(GenerateUISchemaExample);","import React from 'react';\nimport { day3 } from '@jsonforms/examples';\nimport { registerRenderer } from '@jsonforms/core';\nimport { JsonForms } from '@jsonforms/react';\nimport { Provider } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport {commonStyles, Demo, RadiumHashLink} from '../../common'\nimport {createJsonFormsStore} from \"../../common/store\";\nimport ratingControlTester from \"../docs/ratingControlTester\";\nimport RatingControl from \"../docs/RatingControl\";\n\nconst styles = () => ({\n  display1: commonStyles.display1,\n  link: commonStyles.link\n});\n\nconst CustomControlsExample = ({ classes }) => {\n\n  const store = createJsonFormsStore({\n    data: day3.data,\n    schema: day3.schema,\n    uischema: day3.uischema\n  });\n\n  store.dispatch(registerRenderer(ratingControlTester, RatingControl));\n\n  return (\n    <div>\n      <Typography\n        variant={'display1'}\n        className={classes.display1}\n      >\n        Custom controls\n      </Typography>\n      <p>\n        This example demonstrates that the default renderers of JSON Forms can be replaced with custom ones.\n        We've replaced the default renderer for integers (which have a maximum value of 5 here) with one\n        display stars (at the bottom of the form).\n      </p>\n      <p>\n        You can read more about custom\n        controls <RadiumHashLink to='/docs/custom-renderers' className={classes.link}>here</RadiumHashLink>.\n      </p>\n      <Provider store={store}>\n        <Demo\n          schema={day3.schema}\n          uischema={day3.uischema}\n          js={() => (\n            <JsonForms />\n          )}\n        />\n      </Provider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CustomControlsExample);\n","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {Route, Switch} from \"react-router-dom\";\nimport commonStyles from \"../../common/styles\";\nimport Links from \"../../common/Links\";\n\nimport Person from \"./Person\";\nimport Layouts from \"./LayoutExamples\";\nimport Array from \"./Array\";\nimport CategorizationExample from \"./Categorization\";\nimport RuleExample from \"./RuleExample\";\nimport GenerateSchemaExample from \"./GenerateSchemaExample\";\nimport GenerateUISchemaExample from \"./GenerateUISchemaExample\";\nimport CustomControlsExample from \"./CustomControlsExample\";\n\nconst styles = () => ({\n  link: commonStyles.link,\n  sidebarLink: commonStyles.sidebarLink,\n  grid: commonStyles.grid,\n  mainSection: commonStyles.mainSection,\n  sidebar: commonStyles.sidebar,\n  display1: commonStyles.display1,\n  currentRoute: {\n    fontWeight: 'bold'\n  },\n});\n\nconst Examples = ({ classes, location, match }) => (\n  <Grid container\n        spacing={0}\n        className={classes.grid}\n        alignItems={'stretch'}\n  >\n    <Grid item xs={1}/>\n    <Grid item xs={7} className={classes.mainSection}>\n      <Switch>\n        <Route path={`${match.url}/basic`} component={Person}/>\n        <Route path={`${match.url}/layouts`} component={Layouts}/>\n        <Route path={`${match.url}/array`} component={Array}/>\n        <Route path={`${match.url}/categorization`} component={CategorizationExample}/>\n        <Route path={`${match.url}/rule`} component={RuleExample}/>\n        <Route path={`${match.url}/generate-uischema`} component={GenerateUISchemaExample}/>\n        <Route path={`${match.url}/generate-schemata`} component={GenerateSchemaExample}/>\n        <Route path={`${match.url}/custom-controls`} component={CustomControlsExample}/>\n        <Route path={match.url} render={() => (\n          <div>\n            <Typography variant=\"display1\" className={classes.display1}>Examples</Typography>\n            <p>\n              This section shows different examples how JSON Forms can be put to use.\n              You can browse the examples on the right.\n              Each example runs within its own redux store provided via a <code>Provider</code> element.\n              You can inspect the corresponding data, schema and UI schema entries within the store\n              by clicking the respective buttons on top right handle side of each example.\n            </p>\n          </div>\n        )}/>\n      </Switch>\n    </Grid>\n    <Grid item xs={1} />\n    <Grid item xs={3} className={classes.sidebar}>\n      <ul style={{ listStyleType: 'none' }}>\n        <Links\n          currentLocation={location.pathname}\n          classes={classes}\n          url={match.url}\n          routes={[\n            {\n              slug: 'basic',\n              name: 'Basic Example'\n            },\n            {\n              slug: 'layouts',\n              name: 'Layouts',\n            },\n            {\n              slug: 'array',\n              name: 'Array'\n            },\n            {\n              slug: 'categorization',\n              name: 'Categorization'\n            },\n            {\n              slug: 'rule',\n              name: 'Rule'\n            },\n            {\n              slug: 'generate-uischema',\n              name: 'Inferring a UI schema'\n            },\n            {\n              slug: 'generate-schemata',\n              name: 'Inferring both schemata'\n            },\n            {\n              slug: 'custom-controls',\n              name: 'Custom controls'\n            }\n          ]}\n        />\n      </ul>\n    </Grid>\n  </Grid>\n);\n\nexport default withStyles(styles)(Examples);\n","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Feedback from '@material-ui/icons/Feedback'\nimport Build from '@material-ui/icons/Build'\nimport School from '@material-ui/icons/School'\nimport Swap from '@material-ui/icons/SwapVerticalCircle'\nimport Chat from '@material-ui/icons/Chat'\nimport LocalOffer from '@material-ui/icons/LocalOffer'\nimport commonStyles from '../../common/styles';\nimport eclipseSourceLogo from './eclipsesource.png';\nimport EmailIcon from '@material-ui/icons/Email';\n\nconst styles = () => ({\n  grid: {\n    paddingTop: '1em'\n  },\n  display1: commonStyles.display1,\n  icon: {\n    width: 'auto',\n    height: '6em',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  title: {\n    margin: '0.5em'\n  }\n});\n\nconst Support = ({ classes }) => (\n  <Grid container spacing={0} className={classes.grid} justify={'center'} align={'center'}>\n    <Grid item xs={3}/>\n    <Grid item xs={6} align='center'>\n      <Typography variant=\"display1\">Professional Support is brought to you by</Typography>\n      <img alt=\"EclipseSource Logo\" src={eclipseSourceLogo} />\n    </Grid>\n    <Grid item xs={3}/>\n\n    <Grid container  spacing={0}>\n      <Grid item xs />\n      <Grid item xs>\n        <Feedback className={classes.icon}/>\n        <Typography variant='title' className={classes.title}>\n          Evaluation\n        </Typography>\n        <p>\n          Let us help to decide, whether JSON Forms is the right choice for you. We will evaluate your requirements, assess if and how they can be matched with JSON Forms, and help you to estimate the integration effort\n        </p>\n      </Grid>\n      <Grid item xs>\n        <Build className={classes.icon}/>\n        <Typography variant='title' className={classes.title}>\n          Prototyping\n        </Typography>\n        <p>\n          Let us provide you with a prototype demonstrating how JSON Forms will work in your domain\n        </p>\n      </Grid>\n      <Grid item xs>\n        <School className={classes.icon}/>\n        <Typography variant='title' className={classes.title}>\n          Training\n        </Typography>\n        <p>\n          Let us teach you how to apply JSON Forms most efficient in your project, including related technologies such as React or JSON Schema.\n        </p>\n      </Grid>\n      <Grid item xs />\n    </Grid>\n\n    <Grid container>\n      <Grid item xs />\n      <Grid item xs>\n        <Swap className={classes.icon}/>\n        <Typography variant='title' className={classes.title}>\n          Integration\n        </Typography>\n        Let us help you to integrate JSON Forms into your existing application as efficiently as possible\n      </Grid>\n      <Grid item xs>\n        <Chat className={classes.icon}/>\n        <Typography variant='title' className={classes.title}>\n          Support\n        </Typography>\n        Let us assist your team when solving day-to-day issues, such as technical problems or architecture decisions\n      </Grid>\n      <Grid item xs>\n        <LocalOffer className={classes.icon}/>\n        <Typography variant='title' className={classes.title}>\n          Sponsored Development\n        </Typography>\n        Let us adapt and enhance the framework based on your specific requirements\n      </Grid>\n      <Grid item xs/>\n    </Grid>\n\n    <Grid container>\n      <Grid item xs>\n        <Button style={{ paddingTop: '2em', paddingBottom: '2em' }} color={'primary'} component={props => <a href='mailto:munich@eclipsesource.com' {...props}>Contact us</a>}>\n          <EmailIcon/>\n        </Button> for more details!\n      </Grid>\n    </Grid>\n  </Grid>\n);\n\nexport default withStyles(styles)(Support);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport corePackageJson from '@jsonforms/core/package'\nimport commonStyles from \"./common/styles\";\n\nconst styles = () => ({\n  link: {\n    ...commonStyles.link,\n    paddingLeft: '1em'\n  },\n  footer: {\n    backgroundColor: '#212121',\n    justifyContent: 'space-between',\n    display: 'flex'\n  },\n});\n\nconst Footer = ({classes}) => (\n  <footer className={classes.footer}>\n    <span>\n      Version {corePackageJson.version}\n    </span>\n    <span>\n      © EclipseSource 2018\n      <a href=\"https://twitter.com/JSONForms\" className={classes.link}>\n        Twitter\n      </a>\n\n      <a href=\"https://github.com/eclipsesource/jsonforms\" className={classes.link}>\n        Github\n      </a>\n\n      <Link to=\"/imprint\" className={classes.link}>\n        Imprint\n      </Link>\n\n      <Link to=\"/privacy-policy\" className={classes.link}>\n        Privacy Policy\n      </Link>\n\n      <Link to=\"/cookie-policy\" className={classes.link}>\n        Cookie Policy\n      </Link>\n    </span>\n  </footer>\n);\nexport default withStyles(styles)(Footer);\n","import React from 'react';\n\nconst NotFound = () => (\n  <h1>Sorry, the page you are looking for has not been found :(</h1>\n);\n\nexport default NotFound;\n","function loadScript(src) {\n  return new Promise(function(resolve, reject){\n    const script = document.createElement('script');\n    script.src = src;\n    script.addEventListener('load', function () {\n      resolve();\n    });\n    script.addEventListener('error', function (e) {\n      reject(e);\n    });\n    document.body.appendChild(script);\n  })\n}\n\nexport default loadScript;\n","import React from 'react';\nimport loadScript from \"../common/loadScript\";\n\nclass CookiePolicy extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'start'\n    };\n    this.loadCookiePolicy = this.loadCookiePolicy.bind(this);\n  }\n\n  loadCookiePolicy = () => {\n    this.setState({ status: 'loading' });\n    loadScript(\"https://cdn.iubenda.com/iubenda.js\")\n      .then(() => {\n        this.setState({'status': 'done'});\n      }).catch(() => {\n        this.setState({'status': 'error'});\n      })\n  }\n\n  render() {\n    if (this.state.status === 'start') {\n      setTimeout(() => this.loadCookiePolicy());\n    }\n\n    return (\n      <div>\n        <a href=\"https://www.iubenda.com/privacy-policy/83048734/cookie-policy\"\n           className=\"iubenda-nostyle no-brand iubenda-embed iub-body-embed\"\n           title=\"Cookie Policy\">Cookie Policy</a>\n      </div>\n    );\n  }\n}\n\nexport default CookiePolicy;\n","import React from 'react';\nimport loadScript from \"../common/loadScript\";\n\nclass PrivacyPolicy extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'start'\n    };\n    this.loadCookiePolicy = this.loadCookiePolicy.bind(this);\n  }\n\n  loadCookiePolicy = () => {\n    this.setState({ status: 'loading' });\n    loadScript(\"https://cdn.iubenda.com/iubenda.js\")\n      .then(() => {\n        this.setState({'status': 'done'});\n      }).catch(() => {\n      this.setState({'status': 'error'});\n    })\n  }\n\n  render() {\n    if (this.state.status === 'start') {\n      setTimeout(() => this.loadCookiePolicy());\n    }\n\n    return (\n      <div>\n        <a href=\"https://www.iubenda.com/privacy-policy/83048734\"\n           className=\"iubenda-nostyle no-brand iubenda-embed iub-legal-only iub-body-embed\"\n           title=\"Privacy Policy\">Privacy Policy</a>\n      </div>\n    );\n  }\n}\n\nexport default PrivacyPolicy;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n} from 'react-router-dom';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport 'typeface-roboto'\nimport Radium from 'radium';\nimport './App.css';\nimport Home from './pages/home';\nimport Imprint from \"./pages/Imprint\";\nimport Docs from \"./pages/docs\";\nimport Examples from \"./pages/examples\";\nimport Support from \"./pages/support\";\nimport Footer from \"./Footer\";\nimport { commonStyles, Logo } from './common';\nimport NotFound from \"./pages/NotFound\";\nimport CookiePolicy from \"./pages/CookiePolicy\";\nimport PrivacyPolicy from \"./pages/PrivacyPolicy\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  main: {\n    display: 'flex',\n    flex: 1,\n    minHeight: '100vh',\n    flexDirection: 'column'\n  },\n  appBar: {\n    minHeight: '4em',\n    margin: 0,\n    backgroundColor: '#212121',\n    boxShadow: 'none',\n    padding: 0\n  },\n  content: {\n    display: 'flex',\n    paddingTop: '4em',\n    flex: 1,\n    padding: '0em'\n  },\n  logoTitle: {\n    textDecoration: 'none',\n    color: '#fff',\n    flex: '1'\n  },\n  link: {\n    ...commonStyles.link,\n    marginLeft: '1em',\n    fontWeight: 'bold'\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  logo: {\n    padding: 16,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\n\nconst RadiumLink = Radium(Link);\n\nclass App extends Component {\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <Router>\n        <div className={classes.main}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <RadiumLink to='/' style={{ alignItems: 'center', display: 'flex' }}>\n                <Logo width={45} height={30} color='#fff'/>\n              </RadiumLink>\n              &nbsp;\n              <RadiumLink to='/' className={classes.logoTitle}>\n                <Typography variant=\"title\" color=\"inherit\">\n                  JSONForms\n                </Typography>\n              </RadiumLink>\n              <Button\n                component={({...props}) => <RadiumLink to='/examples/basic' {...props} className={classes.link} />}\n              >\n                Examples\n              </Button>\n\n              <Button\n                component={props => <Link to=\"/docs/getting-started\" {...props} className={classes.link} />}\n              >\n                Docs\n              </Button>\n              <Button\n                component={props => <Link to=\"/support\" {...props} className={classes.link} />}\n              >\n                Professional Support\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          <div className={classes.content}>\n            <Switch>\n              <Route exact \n                path=\"/\"\n                component={Home} \n                />\n              <Route \n                path=\"/examples\"\n                component={Examples} \n                />\n              <Route \n                path=\"/docs\"\n                component={Docs}\n              />\n              <Route \n                path=\"/support\"\n                component={Support}\n              />\n              <Route \n                path=\"/imprint\"\n                component={Imprint}\n              />\n              <Route\n                path=\"/privacy-policy\"\n                component={PrivacyPolicy}\n              />\n              <Route\n                path=\"/cookie-policy\"\n                component={CookiePolicy}\n              />\n              <Route\n                component={NotFound}\n              />\n            </Switch>\n          </div>\n\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-roboto'\nimport App from './App';\nimport { unregister } from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nunregister();\n"],"sourceRoot":""}